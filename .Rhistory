data = read_rds(file)
outfile = gsub(".Rds", ".csv", file)
write_csv(data, file=outfile, row.names = F)
}
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE) %>%
map(rds2csv)
?write_csv
# # CSV ---------------------------------------------------------------------
rds2csv = function(file) {
data = read_rds(file)
outfile = gsub(".Rds", ".csv", file)
write_csv(data, file=outfile)
}
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE) %>%
map(rds2csv)
View(data)
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE) %>%
map(rds2csv)
# # CSV ---------------------------------------------------------------------
rds2csv = function(file) {
data = read_rds(file)
outfile = gsub(".Rds", ".csv", file)
write_csv(data, file=outfile)
}
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE) %>%
map(rds2csv)
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE)
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE)[1] %>%
map(rds2csv)
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE)[[1]] %>%
map(rds2csv)
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE)[[1]]
file = list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE)[[1]]
data = read_rds(file)
?read_rds
data = read_rds(file = file)
data = readr::read_rds(file = file)
data = readr::read_rds("../data/ccc_dataset/ccc_verdicts.rds")
file = list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE)[[1]]
data = readr::read_rds(file)
typeof(file)
outfile = gsub(".rds", ".csv", file)
data = readr::read_rds(file)
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE)[[1]]
file = "../data/ccc_dataset/ccc_clerks.rds"
file
data = readr::read_rds(file)
data = readr::read_rds(file)
data = readr::read_rds(as.character(file))
data = readr::read_rds("../data/ccc_dataset/ccc_clerks.rds")
data = readr::read_rds("../data/ccc_dataset/ccc_clerks.rds")
file = list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE)[[1]]
"../data/ccc_dataset/ccc_clerks.rds"
file = "../data/ccc_dataset/ccc_clerks.rds"
data = readr::read_rds(file)
file = list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE)[[1]]
data = readRDS(file)
data = readr::read_rds(file)
library(tidyverse)
# LOAD CURRENT DATA -------------------------------------------------------
metadata = read_rds(file = "../data/ccc_dataset/ccc_metadata.rds")
file = "../data/ccc_dataset/ccc_clerks.rds"
data = readr::read_rds(file = file)
data = readr::read_rds("../data/ccc_dataset/ccc_clerks.rds")
data = readr::read_rds(file = "../data/ccc_dataset/ccc_clerks.rds")
clerks = readr::read_rds("../data/ccc_dataset/ccc_clerks.rds")
texts = read_rds(file = "../data/ccc_dataset/ccc_texts.rds")
ccc_clerks <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_clerks.rds")
ccc_disputed_acts <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_disputed_acts.rds")
ccc_parties <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_parties.rds")
ccc_parties <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_parties.rds")
ccc_judges <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_judges.rds")
ccc_texts <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_texts.rds")
file = "../data/ccc_dataset/ccc_judges.rds"
# # CSV ---------------------------------------------------------------------
rds2csv = function(file) {
data = readr::read_rds(file)
outfile = gsub(".rds", ".csv", file)
write_csv(data, file=outfile)
}
data = readr::read_rds(file)
ccc_compositions <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_compositions.rds")
library(tidyverse)
source("scripts/ccc_web_scraping.R")
source("scripts/ccc_supporting_functions.R")
# source("scripts/WR_decisions_NSS.R")
ccc_clerks <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_clerks.rds")
ccc_clerks <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_clerks.rds")
library(tidyverse)
library(rvest)
library(foreach)
library(fuzzyjoin)
get_clerks = function(){
html = "https://www.usoud.cz/asistenti-soudcu" %>%
read_html()
data_p1 = foreach(i = 1:length(html %>%
html_elements(xpath = '//*[@id="c689"]/h3')), .combine = "bind_rows") %do% {
judge_name = html %>%
html_elements(xpath = paste0('//*[@id="c689"]/h3[',i,']', collapse = "")) %>%
html_text2()
clerks = html %>%
html_elements(xpath = paste0('//*[@id="c689"]/p[',i+1,']', collapse = "")) %>%
html_text2() %>%
str_split(pattern = "\n\r ")
tibble(
judge_name = judge_name,
clerk_name = clerks
)
} %>%
unnest(clerk_name) %>%
mutate(clerk_term_start = str_extract(string = clerk_name, pattern = "\\d+. \\d+. \\d{4}") %>% as_date(format = "%d. %m. %Y"),
clerk_term_end = NA,
clerk_name = str_remove(string = clerk_name, pattern = "\\s\\(\\d+. \\d+. \\d{4}\\)"),
judge_name = str_extract(judge_name, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+(\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+)?\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+"),
clerk_name_full = clerk_name,
clerk_name = str_extract(clerk_name_full, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+")) %>%
regex_left_join(., read_rds("../data/ccc_dataset/ccc_judges.rds") %>% select(judge_name, judge_name_lemmatized) %>% distinct(), by = c('judge_name' = 'judge_name_lemmatized')) %>%
select(-c(judge_name.x, judge_name_lemmatized)) %>%
rename(judge_name = judge_name.y) %>%
relocate(judge_name) %>%
drop_na(clerk_name)
data_p2 = foreach(item = html %>% html_elements(xpath = '//*[@id="c687"]/p') %>% html_text2(), .combine = "bind_rows") %do%{
judge_name = str_extract_all(item, '\\([A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\)') %>% map(.x = ., ~str_remove(.x, "\\(") %>% str_remove("\\)"))
clerk_name = sub("\\d+.\\s*\\d+.\\s*\\d{4} (–|-).*", "", item) %>% str_squish()
start = str_extract_all(item, "\\d+.\\s*\\d+.\\s*\\d{4} (–|-)") %>% map(.x = ., ~str_remove(.x, " (–|-)") %>% str_remove_all(" "))
end = str_extract_all(item, "(–|-)\\s\\d+.\\s*\\d+.\\s*\\d{4}") %>% map(.x = ., ~str_remove(.x, "(–|-) ") %>% str_remove_all(" "))
tibble(
judge_name = judge_name,
clerk_name = clerk_name,
clerk_term_start = start,
clerk_term_end = end
)
} %>%
mutate(clerk_name_full = clerk_name,
clerk_name = str_extract(clerk_name_full, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s([A-ZĽŠČŘŽČ].\\s)?[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+")) %>%
slice(-1) %>%
unnest(cols = c(judge_name, clerk_term_start, clerk_term_end)) %>%
mutate(across(c(clerk_term_start,clerk_term_end), ~as_date(x = ., format = "%d.%m.%Y")))
data = bind_rows(data_p1, data_p2) %>%
mutate(clerk_gender = case_when(str_detect(str_sub(clerk_name, -1), "á") | clerk_name %in% c("Martina Kuloglija", "Zuzana Čierna", "Kamila Abbasi") ~ "F",
.default = "M"),
clerk_degree = case_when(
str_detect(clerk_name_full, "Prof.|David Kosař") ~ "prof",
str_detect(clerk_name_full, "doc.") ~ "doc",
str_detect(clerk_name_full, "Ph.\\s?D.?|Martin Kopa") ~ "phd",
str_detect(clerk_name_full, "JUDr.") ~ "judr",
str_detect(clerk_name_full, "Mgr.|prom. práv.") ~ "mgr",
.default = NA
),
clerk_abroad = ifelse(str_detect(clerk_name_full, "LL.\\s?M.|MJur|M.\\s?Jur.|M.\\s?St.|M.\\s?Phil."), 1, 0)) %>%
left_join(., readr::read_rds("../data/ccc_dataset/ccc_judges.rds") %>% select(judge_name, judge_id) %>% distinct()) %>%
relocate(judge_id) %>%
mutate(clerk_term_end = case_when(is.na(clerk_term_end) ~ clerk_term_start %m+% years(10),
.default = clerk_term_end))
return(data)
}
data_clerks = get_clerks()
View(data_clerks)
write_rds(data_clerks, "../data/ccc_dataset/ccc_clerks.rds")
ccc_clerks <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_clerks.rds")
ccc_compositions <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_compositions.rds")
compositions = metadata %>%
select(doc_id, composition) %>%
unnest(composition)
metadata = read_rds(file = "../data/ccc_dataset/ccc_metadata.rds")
texts = read_rds(file = "../data/ccc_dataset/ccc_texts.rds")
judges = readr::read_rds("../data/ccc_dataset/ccc_judges.rds")
clerks = readr::read_rds("../data/ccc_dataset/ccc_clerks.rds")
compositions = metadata %>%
select(doc_id, composition) %>%
unnest(composition)
View(compositions)
write_rds(compositions, file = "../data/ccc_dataset/ccc_compositions.rds")
ccc_compositions <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_compositions.rds")
ccc_disputed_acts <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_disputed_acts.rds")
disputed_acts = metadata %>%
select(doc_id, disputed_act) %>%
unnest(disputed_act) %>%
mutate(disputed_act_type = case_when(
str_detect(string = disputed_act, pattern = "obecně závazná vyhláška") ~ "municipal_statute",
str_detect(string = disputed_act, pattern = "zákon") ~ "statute",
str_detect(string = disputed_act, pattern = "vyhláška") ~ "regulation",
str_detect(string = disputed_act, pattern = "rozhodnutí správní") ~ "administrative_decision",
str_detect(string = disputed_act, pattern = "nařízení") ~ "decree",
str_detect(string = disputed_act, pattern = "opatření obecné povahy") ~ "general_measure",
str_detect(string = disputed_act, pattern = "ostatní (nezařaditelné)") ~ "other",
str_detect(string = disputed_act, pattern = "usnesení vlády") ~ "government_resolution",
str_detect(string = disputed_act, pattern = "rozhodnutí") & !str_detect(string = disputed_act, pattern = "soud") ~ "decision",
str_detect(string = disputed_act, pattern = "rozhodnutí") & str_detect(string = disputed_act, pattern = "jiné")  ~ "decision",
str_detect(string = disputed_act, pattern = "rozhodnutí") & str_detect(string = disputed_act, pattern = "soud")  ~ "court_decision",
.default = "other"
)) %>%
drop_na()
write_rds(disputed_acts, file = "../data/ccc_dataset/ccc_disputed_acts.rds")
ccc_disputed_acts <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_disputed_acts.rds")
ccc_verdicts <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_verdicts.rds")
ccc_subject_matter <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_subject_matter.rds")
ccc_references <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_references.rds")
ccc_parties <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_parties.rds")
ccc_separate_opinions <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_separate_opinions.rds")
ccc_judges <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_judges.rds")
ccc_texts <- readRDS("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/ccc_texts.rds")
# # CSV ---------------------------------------------------------------------
rds2csv = function(file) {
data = readr::read_rds(file)
outfile = gsub(".rds", ".csv", file)
write_csv(data, file=outfile)
}
file = list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE)[[1]]
data = readr::read_rds(file)
?str_replace
outfile = str_replace(string = file, pattern = ".rds", replacement = ".csv")
outfile = str_replace(string = file, pattern = ".rds", replacement = ".csv") %>%
str_replace("../data/ccc_dataset/", replacement = "../data/ccc_dataset/csvs")
outfile = str_replace(string = file, pattern = ".rds", replacement = ".csv") %>%
str_replace("../data/ccc_dataset/", replacement = "../data/ccc_dataset/csvs/")
rds2csv = function(file) {
data = readr::read_rds(file)
outfile = str_replace(string = file, pattern = ".rds", replacement = ".csv") %>%
str_replace("../data/ccc_dataset/", replacement = "../data/ccc_dataset/csv/")
write_csv(data, file=outfile)
}
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE) %>%
map(rds2csv)
library(readr)
ccc_compositions <- read_csv("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/data/ccc_dataset/csv/ccc_compositions.csv")
View(ccc_compositions)
library(tidyverse)
library(rvest)
library(foreach)
library(fuzzyjoin)
get_clerks = function(){
html = "https://www.usoud.cz/asistenti-soudcu" %>%
read_html()
data_p1 = foreach(i = 1:length(html %>%
html_elements(xpath = '//*[@id="c689"]/h3')), .combine = "bind_rows") %do% {
judge_name = html %>%
html_elements(xpath = paste0('//*[@id="c689"]/h3[',i,']', collapse = "")) %>%
html_text2()
clerks = html %>%
html_elements(xpath = paste0('//*[@id="c689"]/p[',i+1,']', collapse = "")) %>%
html_text2() %>%
str_split(pattern = "\n\r ")
tibble(
judge_name = judge_name,
clerk_name = clerks
)
} %>%
unnest(clerk_name) %>%
mutate(clerk_term_start = str_extract(string = clerk_name, pattern = "\\d+. \\d+. \\d{4}") %>% as_date(format = "%d. %m. %Y"),
clerk_term_end = NA,
clerk_name = str_remove(string = clerk_name, pattern = "\\s\\(\\d+. \\d+. \\d{4}\\)"),
judge_name = str_extract(judge_name, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+(\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+)?\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+"),
clerk_name_full = clerk_name,
clerk_name = str_extract(clerk_name_full, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+")) %>%
regex_left_join(., read_rds("../data/ccc_dataset/ccc_judges.rds") %>% select(judge_name, judge_name_lemmatized) %>% distinct(), by = c('judge_name' = 'judge_name_lemmatized')) %>%
select(-c(judge_name.x, judge_name_lemmatized)) %>%
rename(judge_name = judge_name.y) %>%
relocate(judge_name) %>%
drop_na(clerk_name)
data_p2 = foreach(item = html %>% html_elements(xpath = '//*[@id="c687"]/p') %>% html_text2(), .combine = "bind_rows") %do%{
judge_name = str_extract_all(item, '\\([A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\)') %>% map(.x = ., ~str_remove(.x, "\\(") %>% str_remove("\\)"))
clerk_name = sub("\\d+.\\s*\\d+.\\s*\\d{4} (–|-).*", "", item) %>% str_squish()
start = str_extract_all(item, "\\d+.\\s*\\d+.\\s*\\d{4} (–|-)") %>% map(.x = ., ~str_remove(.x, " (–|-)") %>% str_remove_all(" "))
end = str_extract_all(item, "(–|-)\\s\\d+.\\s*\\d+.\\s*\\d{4}") %>% map(.x = ., ~str_remove(.x, "(–|-) ") %>% str_remove_all(" "))
tibble(
judge_name = judge_name,
clerk_name = clerk_name,
clerk_term_start = start,
clerk_term_end = end
)
} %>%
mutate(clerk_name_full = clerk_name,
clerk_name = str_extract(clerk_name_full, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s([A-ZĽŠČŘŽČ].\\s)?[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+")) %>%
slice(-1) %>%
unnest(cols = c(judge_name, clerk_term_start, clerk_term_end)) %>%
mutate(across(c(clerk_term_start,clerk_term_end), ~as_date(x = ., format = "%d.%m.%Y")))
data = bind_rows(data_p1, data_p2) %>%
mutate(clerk_gender = case_when(str_detect(str_sub(clerk_name, -1), "á") | clerk_name %in% c("Martina Kuloglija", "Zuzana Čierna", "Kamila Abbasi") ~ "F",
.default = "M"),
clerk_degree = case_when(
str_detect(clerk_name_full, "Prof.|David Kosař") ~ "prof",
str_detect(clerk_name_full, "doc.") ~ "doc",
str_detect(clerk_name_full, "Ph.\\s?D.?|Martin Kopa") ~ "phd",
str_detect(clerk_name_full, "JUDr.") ~ "judr",
str_detect(clerk_name_full, "Mgr.|prom. práv.") ~ "mgr",
.default = NA
),
clerk_abroad = ifelse(str_detect(clerk_name_full, "LL.\\s?M.|MJur|M.\\s?Jur.|M.\\s?St.|M.\\s?Phil."), 1, 0)) %>%
left_join(., readr::read_rds("../data/ccc_dataset/ccc_judges.rds") %>% select(judge_name, judge_id) %>% distinct()) %>%
relocate(judge_id) %>%
mutate(clerk_term_end = case_when(is.na(clerk_term_end) ~ clerk_term_start %m+% years(10),
.default = clerk_term_end)) %>%
left_join(., . %>% select(clerk_name) %>% distinct() %>% rowwise() %>%
mutate(clerk_id = paste0("C:",cur_group_id())))
return(data)
}
data_clerks = get_clerks()
html = "https://www.usoud.cz/asistenti-soudcu" %>%
read_html()
data_p1 = foreach(i = 1:length(html %>%
html_elements(xpath = '//*[@id="c689"]/h3')), .combine = "bind_rows") %do% {
judge_name = html %>%
html_elements(xpath = paste0('//*[@id="c689"]/h3[',i,']', collapse = "")) %>%
html_text2()
clerks = html %>%
html_elements(xpath = paste0('//*[@id="c689"]/p[',i+1,']', collapse = "")) %>%
html_text2() %>%
str_split(pattern = "\n\r ")
tibble(
judge_name = judge_name,
clerk_name = clerks
)
} %>%
unnest(clerk_name) %>%
mutate(clerk_term_start = str_extract(string = clerk_name, pattern = "\\d+. \\d+. \\d{4}") %>% as_date(format = "%d. %m. %Y"),
clerk_term_end = NA,
clerk_name = str_remove(string = clerk_name, pattern = "\\s\\(\\d+. \\d+. \\d{4}\\)"),
judge_name = str_extract(judge_name, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+(\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+)?\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+"),
clerk_name_full = clerk_name,
clerk_name = str_extract(clerk_name_full, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+")) %>%
regex_left_join(., read_rds("../data/ccc_dataset/ccc_judges.rds") %>% select(judge_name, judge_name_lemmatized) %>% distinct(), by = c('judge_name' = 'judge_name_lemmatized')) %>%
select(-c(judge_name.x, judge_name_lemmatized)) %>%
rename(judge_name = judge_name.y) %>%
relocate(judge_name) %>%
drop_na(clerk_name)
data_p2 = foreach(item = html %>% html_elements(xpath = '//*[@id="c687"]/p') %>% html_text2(), .combine = "bind_rows") %do%{
judge_name = str_extract_all(item, '\\([A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\)') %>% map(.x = ., ~str_remove(.x, "\\(") %>% str_remove("\\)"))
clerk_name = sub("\\d+.\\s*\\d+.\\s*\\d{4} (–|-).*", "", item) %>% str_squish()
start = str_extract_all(item, "\\d+.\\s*\\d+.\\s*\\d{4} (–|-)") %>% map(.x = ., ~str_remove(.x, " (–|-)") %>% str_remove_all(" "))
end = str_extract_all(item, "(–|-)\\s\\d+.\\s*\\d+.\\s*\\d{4}") %>% map(.x = ., ~str_remove(.x, "(–|-) ") %>% str_remove_all(" "))
tibble(
judge_name = judge_name,
clerk_name = clerk_name,
clerk_term_start = start,
clerk_term_end = end
)
} %>%
mutate(clerk_name_full = clerk_name,
clerk_name = str_extract(clerk_name_full, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s([A-ZĽŠČŘŽČ].\\s)?[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+")) %>%
slice(-1) %>%
unnest(cols = c(judge_name, clerk_term_start, clerk_term_end)) %>%
mutate(across(c(clerk_term_start,clerk_term_end), ~as_date(x = ., format = "%d.%m.%Y")))
data = bind_rows(data_p1, data_p2) %>%
mutate(clerk_gender = case_when(str_detect(str_sub(clerk_name, -1), "á") | clerk_name %in% c("Martina Kuloglija", "Zuzana Čierna", "Kamila Abbasi") ~ "F",
.default = "M"),
clerk_degree = case_when(
str_detect(clerk_name_full, "Prof.|David Kosař") ~ "prof",
str_detect(clerk_name_full, "doc.") ~ "doc",
str_detect(clerk_name_full, "Ph.\\s?D.?|Martin Kopa") ~ "phd",
str_detect(clerk_name_full, "JUDr.") ~ "judr",
str_detect(clerk_name_full, "Mgr.|prom. práv.") ~ "mgr",
.default = NA
),
clerk_abroad = ifelse(str_detect(clerk_name_full, "LL.\\s?M.|MJur|M.\\s?Jur.|M.\\s?St.|M.\\s?Phil."), 1, 0)) %>%
left_join(., readr::read_rds("../data/ccc_dataset/ccc_judges.rds") %>% select(judge_name, judge_id) %>% distinct()) %>%
relocate(judge_id) %>%
mutate(clerk_term_end = case_when(is.na(clerk_term_end) ~ clerk_term_start %m+% years(10),
.default = clerk_term_end))
data %>%
left_join(., data %>% select(clerk_name) %>% distinct() %>% rowwise() %>%
mutate(clerk_id = paste0("C:",cur_group_id())))
data %>%
left_join(., data %>% select(clerk_name) %>% distinct() %>% rowwise() %>%
mutate(clerk_id = paste0("C:",cur_group_id()))) %>%
relocate(clerk_id, .before = clerk_name)
data = data %>%
left_join(., data %>% select(clerk_name) %>% distinct() %>% rowwise() %>%
mutate(clerk_id = paste0("C:",cur_group_id()))) %>%
relocate(clerk_id, .before = clerk_name)
View(data)
data_clerks = get_clerks()
library(tidyverse)
library(rvest)
library(foreach)
library(fuzzyjoin)
get_clerks = function(){
html = "https://www.usoud.cz/asistenti-soudcu" %>%
read_html()
data_p1 = foreach(i = 1:length(html %>%
html_elements(xpath = '//*[@id="c689"]/h3')), .combine = "bind_rows") %do% {
judge_name = html %>%
html_elements(xpath = paste0('//*[@id="c689"]/h3[',i,']', collapse = "")) %>%
html_text2()
clerks = html %>%
html_elements(xpath = paste0('//*[@id="c689"]/p[',i+1,']', collapse = "")) %>%
html_text2() %>%
str_split(pattern = "\n\r ")
tibble(
judge_name = judge_name,
clerk_name = clerks
)
} %>%
unnest(clerk_name) %>%
mutate(clerk_term_start = str_extract(string = clerk_name, pattern = "\\d+. \\d+. \\d{4}") %>% as_date(format = "%d. %m. %Y"),
clerk_term_end = NA,
clerk_name = str_remove(string = clerk_name, pattern = "\\s\\(\\d+. \\d+. \\d{4}\\)"),
judge_name = str_extract(judge_name, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+(\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+)?\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+"),
clerk_name_full = clerk_name,
clerk_name = str_extract(clerk_name_full, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+")) %>%
regex_left_join(., read_rds("../data/ccc_dataset/ccc_judges.rds") %>% select(judge_name, judge_name_lemmatized) %>% distinct(), by = c('judge_name' = 'judge_name_lemmatized')) %>%
select(-c(judge_name.x, judge_name_lemmatized)) %>%
rename(judge_name = judge_name.y) %>%
relocate(judge_name) %>%
drop_na(clerk_name)
data_p2 = foreach(item = html %>% html_elements(xpath = '//*[@id="c687"]/p') %>% html_text2(), .combine = "bind_rows") %do%{
judge_name = str_extract_all(item, '\\([A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\)') %>% map(.x = ., ~str_remove(.x, "\\(") %>% str_remove("\\)"))
clerk_name = sub("\\d+.\\s*\\d+.\\s*\\d{4} (–|-).*", "", item) %>% str_squish()
start = str_extract_all(item, "\\d+.\\s*\\d+.\\s*\\d{4} (–|-)") %>% map(.x = ., ~str_remove(.x, " (–|-)") %>% str_remove_all(" "))
end = str_extract_all(item, "(–|-)\\s\\d+.\\s*\\d+.\\s*\\d{4}") %>% map(.x = ., ~str_remove(.x, "(–|-) ") %>% str_remove_all(" "))
tibble(
judge_name = judge_name,
clerk_name = clerk_name,
clerk_term_start = start,
clerk_term_end = end
)
} %>%
mutate(clerk_name_full = clerk_name,
clerk_name = str_extract(clerk_name_full, pattern = "[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+\\s([A-ZĽŠČŘŽČ].\\s)?[A-ZĽŠČŘŽČ]{1}[a-žěščřžýáíéúůň]+")) %>%
slice(-1) %>%
unnest(cols = c(judge_name, clerk_term_start, clerk_term_end)) %>%
mutate(across(c(clerk_term_start,clerk_term_end), ~as_date(x = ., format = "%d.%m.%Y")))
data = bind_rows(data_p1, data_p2) %>%
mutate(clerk_gender = case_when(str_detect(str_sub(clerk_name, -1), "á") | clerk_name %in% c("Martina Kuloglija", "Zuzana Čierna", "Kamila Abbasi") ~ "F",
.default = "M"),
clerk_degree = case_when(
str_detect(clerk_name_full, "Prof.|David Kosař") ~ "prof",
str_detect(clerk_name_full, "doc.") ~ "doc",
str_detect(clerk_name_full, "Ph.\\s?D.?|Martin Kopa") ~ "phd",
str_detect(clerk_name_full, "JUDr.") ~ "judr",
str_detect(clerk_name_full, "Mgr.|prom. práv.") ~ "mgr",
.default = NA
),
clerk_abroad = ifelse(str_detect(clerk_name_full, "LL.\\s?M.|MJur|M.\\s?Jur.|M.\\s?St.|M.\\s?Phil."), 1, 0)) %>%
left_join(., readr::read_rds("../data/ccc_dataset/ccc_judges.rds") %>% select(judge_name, judge_id) %>% distinct()) %>%
relocate(judge_id) %>%
mutate(clerk_term_end = case_when(is.na(clerk_term_end) ~ clerk_term_start %m+% years(10),
.default = clerk_term_end))
data = data %>%
left_join(., data %>% select(clerk_name) %>% distinct() %>% rowwise() %>%
mutate(clerk_id = paste0("C:",cur_group_id()))) %>%
relocate(clerk_id, .before = clerk_name)
return(data)
}
data_clerks = get_clerks()
write_rds(data_clerks, "../data/ccc_dataset/ccc_clerks.rds")
library(tidyverse)
source("scripts/ccc_web_scraping.R")
source("scripts/ccc_supporting_functions.R")
rds2csv = function(file) {
data = readr::read_rds(file)
outfile = str_replace(string = file, pattern = ".rds", replacement = ".csv") %>%
str_replace("../data/ccc_dataset/", replacement = "../data/ccc_dataset/csv/")
write_csv(data, file=outfile)
}
list.files(path = "../data/ccc_dataset", pattern = ".rds", full.names = TRUE) %>%
map(rds2csv)
library(codebookr)
library(tidyverse)
ccc_datasets = xlsx::read.xlsx("report/codebook.xlsx", 1)
ccc_variables = xlsx::read.xlsx("report/codebook.xlsx", 2)
# create a codebook
codebookr::create_codebook(
file_path = "report/codebook.tex",
datasets_input = ccc_datasets,
variables_input = ccc_variables,
title_text = "The Czech Constitutional Court Dataset \\\\ The CCC Dataset",
version_text = "1.0",
footer_text = "The Czech Constitutional Court Dataset \\hspace{5pt} | \\hspace{5pt} Štěpán Paulík",
author_names = "Štěpán Paulík",
theme_color = "#6e537e",
heading_font_size = 30,
subheading_font_size = 10,
title_font_size = 16,
table_of_contents = TRUE,
include_variable_type = TRUE
)
# create a codebook
codebookr::create_codebook(
file_path = "report/codebook.tex",
datasets_input = ccc_datasets,
variables_input = ccc_variables,
title_text = "The Czech Constitutional Court Dataset \\\\ The CCC Dataset",
version_text = "1.0",
footer_text = "The Czech Constitutional Court Dataset \\hspace{5pt} | \\hspace{5pt} Štěpán Paulík",
author_names = "Štěpán Paulík",
theme_color = "#6e537e",
heading_font_size = 30,
subheading_font_size = 10,
title_font_size = 16,
table_of_contents = TRUE,
include_variable_type = TRUE
)
# create a codebook
codebookr::create_codebook(
file_path = "report/codebook.tex",
datasets_input = ccc_datasets,
variables_input = ccc_variables,
title_text = "The Czech Constitutional Court Dataset \\\\ The CCC Dataset",
version_text = "1.0",
footer_text = "The Czech Constitutional Court Dataset \\hspace{5pt} | \\hspace{5pt} Štěpán Paulík",
author_names = "Štěpán Paulík",
theme_color = "#6e537e",
heading_font_size = 30,
subheading_font_size = 10,
title_font_size = 16,
table_of_contents = TRUE,
include_variable_type = TRUE
)
list.files(path = "../data/ccc_dataset/rds", pattern = ".rds", full.names = TRUE) %>%
map(rds2csv)
list.files(path = "../data/ccc_dataset/rds", pattern = ".rds", full.names = TRUE)
