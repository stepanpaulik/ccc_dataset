US_dissents = data %>%
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>%
group_by(doc_id) %>%
mutate(dissent_group = row_number()) %>%
ungroup() %>%
unnest(dissenting_judge)
View(US_dissents)
View(data)
View(US_dissents)
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissent_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id))
View(US_dissents)
# Save data
readr::write_rds(US_dissents, file = "../data/US_dissents.rds")
View(US_dissents)
View(US_metadata)
View(US_dissents)
View(US_dissents)
View(US_metadata)
View(US_judges)
View(US_metadata)
View(US_dissents)
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissent_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id)
View(US_dissents)
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id)
US_metadata = US_metadata %>%
left_join(., US_dissents, by = join_by(doc_id, dissenting_judge))
View(US_metadata)
US_metadata = US_metadata %>%
left_join(., US_dissents, by = join_by(doc_id, dissenting_opinion))
US_metadata = US_metadata %>%
left_join(., US_dissents, by = join_by(doc_id, dissenting_opinion == disenting_judge))
US_metadata = US_metadata %>%
left_join(., US_dissents, by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_metadata)
left_join(., US_dissents, by = join_by(doc_id, dissenting_opinion == dissenting_judge))
US_metadata = US_metadata %>%
mutate(dissenting_opinion = paste(word(dissenting_opinion, 2), paste(word(dissenting_opinion, 1), sep = "\s"))) %>%
US_metadata = US_metadata %>%
mutate(dissenting_opinion = paste(word(dissenting_opinion, 2), paste(word(dissenting_opinion, 1), sep = "\\s"))) %>%
left_join(., US_dissents, by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_metadata)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
select(doc_id, date_decision, dissenting_opinion)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
mutate(dissenting_opinion = paste(word(dissenting_opinion, 2), paste(word(dissenting_opinion, 1), sep = "\\s")))
View(US_metadata)
select(doc_id, date_decision, dissenting_opinion)
select(doc_id, date_decision, dissenting_opinion)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
mutate(dissenting_opinion = paste(word(dissenting_opinion, 2), paste(word(dissenting_opinion, 1), sep = "\\s"))) %>%
select(doc_id, date_decision, dissenting_opinion)
View(US_metadata)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
mutate(dissenting_opinion = paste(word(dissenting_opinion, 2), paste(word(dissenting_opinion, 1), sep = "\\s"))) %>%
select(doc_id, date_decision, dissenting_opinion)
View(US_dissents)
View(US_metadata)
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion))
View(US_metadata)
judges = US_metadata$dissenting_opinion[10]
View(judges)
judges = US_metadata$dissenting_opinion[10][1]
View(judges)
judges = US_metadata$dissenting_opinion[10][[1]]
map(.x = judges, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))
judges = map(.x = judges, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))
View(judges)
judges = US_metadata$dissenting_opinion[10]
View(judges)
judges = US_metadata$dissenting_opinion[10]
View(judges)
judges = map_chr(.x = judges, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))
judges = map_dfr(.x = judges, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))
judges = map_df(.x = judges, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))
judges = US_metadata$dissenting_opinion[10]
View(judges)
judges = (.x = judges, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))
judges = map(.x = judges, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))
View(judges)
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
unnest(dissenting_opinion) %>%
mutate(dissenting_opinion = paste(word(dissenting_opinion, 2), paste(word(dissenting_opinion, 1), sep = "\\s"))) %>%
nest(dissenting_opinion)
?nest
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
unnest(dissenting_opinion) %>%
mutate(dissenting_opinion = paste(word(dissenting_opinion, 2), paste(word(dissenting_opinion, 1), sep = "\\s")))
View(US_metadata)
?na_if
US_metadata$dissenting_opinion[1]
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
unnest(dissenting_opinion) %>%
mutate(dissenting_opinion = paste(word(dissenting_opinion, 2), paste(word(dissenting_opinion, 1), sep = "\\s"))) %>%
mutate(dissenting_opinion = na_if(dissenting_opinion, "NA NA"))
View(US_metadata)
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
unnest(dissenting_opinion) %>%
mutate(dissenting_opinion = paste(word(dissenting_opinion, 2), paste(word(dissenting_opinion, 1), sep = "\\s"))) %>%
mutate(dissenting_opinion = na_if(dissenting_opinion, "NA NA")) %>%
nest(dissenting_opinion)
?nest
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
unnest(dissenting_opinion) %>%
mutate(dissenting_opinion = paste(word(dissenting_opinion, 2), paste(word(dissenting_opinion, 1), sep = "\\s"))) %>%
mutate(dissenting_opinion = na_if(dissenting_opinion, "NA NA")) %>%
nest(dissenting_opinion = dissenting_opinion)
View(US_metadata)
View(US_metadata[[25]][[1]])
View(US_metadata[[25]][[58]])
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s"))))
View(US_metadata)
US_metadata$dissenting_opinion
mutate(dissenting_opinion = map(.x = dissenting_opinion, ~na_if(.x, "NA NA"))
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))) %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, ~na_if(.x, "NA NA")))
View(US_metadata)
US_metadata$dissenting_opinion
unique(US_metadata$dissenting_opinion)
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))) %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, ~na_if(.x, "NA NA"))) %>%
readr::write_rds(., file = "../data/US_metadata.rds")
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))) %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, ~na_if(.x, "NA NA"))) %>%
readr::write_rds(., file = "../data/US_metadata.rds")
library(tidyverse)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
select(doc_id, date_decision, dissenting_opinion)
US_texts = readr::read_rds("../data/US_texts.rds") %>%
filter(doc_id %in% US_metadata$doc_id)
US_judges = readr::read_rds("../data/US_judges.rds") %>%
mutate(initials = paste0(substring(word(judge_name, 1), 1, 1), ".\\s*", substring(word(judge_name, 2), 1, 1), "."))
# The terms detecting paragraphs starting the dissenting opinion
dissent_term = paste("Odlišné stanovisko",
"ODLIŠNÉ STANOVISKO",
"O d l i š n é   s t a n o v i s k o",
"O d l i š n é  s t a n o v i s k o",
"Odlišné  stanovisko",
"O d l i š n é s t a n o v i s k o",
"O D L I Š N É  S T A N O V I S K O",
"Odlišné doplňující stanovisko",
"Odlišné-doplňující stanovisko", sep = "|")
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id)
View(US_dissents)
View(US_metadata)
View(US_dissents)
US_metadata = US_metadata %>%
left_join(., US_dissents, by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_metadata)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
select(doc_id, date_decision, dissenting_opinion)
View(US_metadata)
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))) %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, ~na_if(.x, "NA NA"))) %>%
readr::write_rds(., file = "../data/US_metadata.rds")
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, function(x) paste(word(x, 2), paste(word(x, 1), sep = "\\s")))) %>%
mutate(dissenting_opinion = map(.x = dissenting_opinion, ~na_if(.x, "NA NA")))
View(US_metadata)
unique(US_metadata$dissenting_opinion)
readr::write_rds(US_metadata, file = "../data/US_metadata.rds")
View(US_metadata)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
select(doc_id, date_decision, dissenting_opinion)
View(US_metadata)
US_metadata = US_metadata %>%
left_join(., US_dissents, by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_metadata)
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term))
View(US_dissents)
# The terms detecting paragraphs starting the dissenting opinion
dissent_term = paste("Odlišné stanovisko",
"ODLIŠNÉ STANOVISKO",
"O d l i š n é   s t a n o v i s k o",
"O d l i š n é  s t a n o v i s k o",
"Odlišné  stanovisko",
"O d l i š n é s t a n o v i s k o",
"O D L I Š N É  S T A N O V I S K O",
"Odlišné doplňující stanovisko",
"Odlišné-doplňující stanovisko", "K odlišnému stanovisku", sep = "|")
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id)
View(US_dissents)
View(US_metadata)
# The terms detecting paragraphs starting the dissenting opinion
dissent_term = paste("Odlišné stanovisko",
"ODLIŠNÉ STANOVISKO",
"O d l i š n é   s t a n o v i s k o",
"O d l i š n é  s t a n o v i s k o",
"Odlišné  stanovisko",
"O d l i š n é s t a n o v i s k o",
"O D L I Š N É  S T A N O V I S K O",
"Odlišné doplňující stanovisko",
"Odlišné-doplňující stanovisko", "K odlišnému stanovisku", sep = "|")
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term))
View(US_dissents)
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id)
US_metadata = US_metadata %>%
left_join(., US_dissents, by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_metadata)
View(US_dissents)
?distinct
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id) %>%
group_by(doc_id) %>%
distinct(dissenting_judge) %>%
ungroup()
View(US_dissents)
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id) %>%
group_by(doc_id) %>%
distinct(dissenting_judge, .keep_all = TRUE) %>%
ungroup()
View(US_dissents)
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id) %>%
group_by(doc_id) %>%
arrange(desc(dissenting_group)) %>%
distinct(dissenting_judge, .keep_all = TRUE) %>%
ungroup()
View(US_dissents)
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id) %>%
group_by(doc_id) %>%
arrange(desc(dissenting_group)) %>%
distinct(dissenting_judge, .keep_all = TRUE) %>%
arrange(dissenting_group) %>%
ungroup()
View(US_dissents)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
select(doc_id, date_decision, dissenting_opinion)
US_metadata = US_metadata %>%
left_join(., US_dissents, by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_dissents)
View(US_metadata)
View(US_metadata)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
select(doc_id, dissenting_opinion)
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id) %>%
group_by(doc_id) %>%
arrange(desc(dissenting_group)) %>% # removes duplicates because of the "We join the dissent of..."
distinct(dissenting_judge, .keep_all = TRUE) %>%
arrange(dissenting_group) %>%
ungroup() %>%
left_join(US_metadata, ., by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_dissents)
# The terms detecting paragraphs starting the dissenting opinion
dissent_term = paste("Odlišné stanovisko",
"ODLIŠNÉ STANOVISKO",
"O d l i š n é   s t a n o v i s k o",
"O d l i š n é  s t a n o v i s k o",
"Odlišné  stanovisko",
"O d l i š n é s t a n o v i s k o",
"O D L I Š N É  S T A N O V I S K O",
"Odlišné doplňující stanovisko",
"Odlišné-doplňující stanovisko", "Konkurující stanovisko", "K odlišnému stanovisku", sep = "|")
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id) %>%
group_by(doc_id) %>%
arrange(desc(dissenting_group)) %>% # removes duplicates because of the "We join the dissent of..."
distinct(dissenting_judge, .keep_all = TRUE) %>%
arrange(dissenting_group) %>%
ungroup() %>%
left_join(US_metadata, ., by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_metadata)
View(US_dissents)
# Save data
readr::write_rds(US_dissents, file = "../data/US_dissents.rds")
