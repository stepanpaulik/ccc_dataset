labs(x = "Age (years) of a justice at the start of their term", y = NULL)
average_age = data_judges %>%
mutate(age = year(judge_term_start) - judge_yob) %>%
ggplot(aes(x = age)) +
geom_density() +
labs(x = "Age (years) of a justice at the start of their term", y = NULL)
average_age
gender_judges = data_judges %>%
ggplot(aes(x = judge_term_court, fill = judge_gender, color = judge_gender)) +
geom_bar(position = "dodge", show.legend = FALSE) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 5)) +
scale_color_brewer(palette="Pastel1", direction = -1) +
scale_fill_brewer(palette="Pastel1", direction = -1) +
labs(x = "Terms of the CCC", y = NULL, subtitle = "Justices") +
theme(legend.title = element_blank())
gender_judges
gender_clerks = data_clerks %>%
distinct(clerk_name, .keep_all = TRUE) %>%
ggplot(aes(x = clerk_gender, fill = clerk_gender)) +
scale_color_brewer(palette="Pastel1", direction = -1) +
scale_fill_brewer(palette="Pastel1", direction = -1) +
geom_bar() +
theme(legend.title = element_blank(),
axis.text.x = element_blank()) +
labs(x = NULL, y = NULL, subtitle = "Clerks")
gender_clerks
gender_clerks_judges = data_clerks %>%
distinct(clerk_name, .keep_all = TRUE) %>%
left_join(., data_judges %>% select(judge_name, judge_gender)) %>%
ggplot(aes(x = clerk_gender, fill = clerk_gender)) +
scale_color_brewer(palette="Pastel1", direction = -1) +
scale_fill_brewer(palette="Pastel1", direction = -1) +
geom_bar() +
theme(legend.title = element_blank(),
axis.text.x = element_blank()) +
labs(x = NULL, y = NULL, subtitle = "Clerks") +
facet_wrap(~judge_gender)
gender_clerks_judges = data_clerks %>%
distinct(clerk_name, .keep_all = TRUE) %>%
left_join(., data_judges %>% select(judge_name, judge_gender)) %>%
ggplot(aes(x = clerk_gender, fill = clerk_gender)) +
scale_color_brewer(palette="Pastel1", direction = -1) +
scale_fill_brewer(palette="Pastel1", direction = -1) +
geom_bar() +
theme(legend.title = element_blank(),
axis.text.x = element_blank()) +
labs(x = NULL, y = NULL, subtitle = "Clerks") +
facet_wrap(~judge_gender)
gender_clerks_judges
gender_clerks
View(data_clerks)
library(tidyverse); theme_set(theme_minimal())
library(patchwork)
# case-level variables ----------------------------------------------------
data_metadata = read_rds("../data/US_metadata.rds") %>%
mutate(presence_dissent = if_else(is.na(as.character(dissenting_opinion)), "None", "At least 1"),
merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility"))
data_dissents = read_rds("../data/US_dissents.rds")
data_metadata %>%
filter(merits_admissibility %in% c("merits", "admissibility")) %>%
group_by(year(date_submission)) %>%
summarise(caseload = n(),
avg_length = mean(length_proceeding)) %>%
filter(avg_length < 400) %>%
ggplot(aes(y = caseload, x = avg_length)) +
geom_point() +
geom_smooth(method = "lm", se = F, color = "black") +
labs(x = "Average length of proceedings before the CCC", y = "Yearly caseload of the CCC")
caseload = data_metadata %>%
mutate(merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility")) %>%
ggplot(aes(x = year(date_submission), fill = merits_admissibility)) +
geom_bar(position = position_stack(reverse = TRUE))  +
scale_x_continuous(breaks = seq(1991, 2023, 2)) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = NULL, y = NULL, fill = "Type of verdict")
dissents_distribution_judges = data_dissents %>%
group_by(doc_id) %>%
count() %>%
ungroup() %>%
ggplot(aes(x = n)) +
geom_bar() +
scale_x_continuous(breaks = seq(1, 9, 1))
dissents_distribution_opinions = data_dissents %>%
group_by(doc_id) %>%
summarise(n = length(unique(dissenting_group))) %>%
ungroup() %>%
ggplot(aes(x = n)) +
geom_bar() +
scale_x_continuous(breaks = seq(1, 9, 1)) +
labs(x = "Number of dissenting opinions", y = "Count")
dissents_prevalence = data_metadata %>%
filter(type_decision == "Nález" | formation == "Plenum") %>%
ggplot(aes(x = forcats::fct_infreq(presence_dissent))) +
geom_bar() +
labs(x = NULL, y = NULL)
# judge-level variables ---------------------------------------------------
data_judges = read_rds(file = "../data/US_judges.rds")
data_clerks = read_rds("../data/US_clerks.rds")
alma_mater = data_judges %>%
ggplot(aes(x = judge_uni, fill = judge_uni)) +
scale_fill_brewer(palette="Pastel1") +
geom_bar() +
labs(x = NULL, y = NULL)
average_age = data_judges %>%
mutate(age = year(judge_term_start) - judge_yob) %>%
ggplot(aes(x = age)) +
geom_density() +
labs(x = "Age (years) of a justice at the start of their term", y = NULL)
average_age
gender_judges = data_judges %>%
ggplot(aes(x = judge_term_court, fill = judge_gender, color = judge_gender)) +
geom_bar(position = "dodge", show.legend = FALSE) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 5)) +
scale_color_brewer(palette="Pastel1", direction = -1) +
scale_fill_brewer(palette="Pastel1", direction = -1) +
labs(x = "Terms of the CCC", y = NULL, subtitle = "Justices") +
theme(legend.title = element_blank())
gender_judges
gender_clerks = data_clerks %>%
distinct(clerk_name, .keep_all = TRUE) %>%
ggplot(aes(x = clerk_gender, fill = clerk_gender)) +
scale_color_brewer(palette="Pastel1", direction = -1) +
scale_fill_brewer(palette="Pastel1", direction = -1) +
geom_bar() +
theme(legend.title = element_blank(),
axis.text.x = element_blank()) +
labs(x = NULL, y = NULL, subtitle = "Clerks")
gender_clerks
gender_clerks_judges = data_clerks %>%
distinct(clerk_name, .keep_all = TRUE) %>%
left_join(., data_judges %>% select(judge_name, judge_gender)) %>%
ggplot(aes(x = clerk_gender, fill = clerk_gender)) +
scale_color_brewer(palette="Pastel1", direction = -1) +
scale_fill_brewer(palette="Pastel1", direction = -1) +
geom_bar() +
theme(legend.title = element_blank(),
axis.text.x = element_blank()) +
labs(x = NULL, y = NULL, subtitle = "Clerks") +
facet_wrap(~judge_gender)
rm(list=ls(pattern="^data_"))
save.image(file = "report/descriptive_statistics.RData")
devtools::install_github("jfjelstul/codebookr")
# view example data
View(codebookr::euip_datasets)
View(codebookr::euip_variables)
# create a codebook
codebookr::create_codebook(
file_path = "example/codebook/codebook.tex",
datasets_input = euip_datasets,
variables_input = euip_variables,
title_text = "The European Union Infringement Procedure \\\\ (EUIP) Database",
version_text = "1.0",
footer_text = "The EUIP Database Codebook \\hspace{5pt} | \\hspace{5pt} Joshua C. Fjelstul, Ph.D.",
author_names = "Joshua C. Fjelstul, Ph.D.",
theme_color = "#4D9FEB",
heading_font_size = 30,
subheading_font_size = 10,
title_font_size = 16,
table_of_contents = TRUE,
include_variable_type = TRUE
)
# create a codebook
codebookr::create_codebook(
file_path = "example/codebook/codebook.tex",
datasets_input = euip_datasets,
variables_input = euip_variables,
title_text = "The European Union Infringement Procedure \\\\ (EUIP) Database",
version_text = "1.0",
footer_text = "The EUIP Database Codebook \\hspace{5pt} | \\hspace{5pt} Joshua C. Fjelstul, Ph.D.",
author_names = "Joshua C. Fjelstul, Ph.D.",
theme_color = "#4D9FEB",
heading_font_size = 30,
subheading_font_size = 10,
title_font_size = 16,
table_of_contents = TRUE,
include_variable_type = TRUE
)
library(codebookr)
# create a codebook
codebookr::create_codebook(
file_path = "example/codebook/codebook.tex",
datasets_input = euip_datasets,
variables_input = euip_variables,
title_text = "The European Union Infringement Procedure \\\\ (EUIP) Database",
version_text = "1.0",
footer_text = "The EUIP Database Codebook \\hspace{5pt} | \\hspace{5pt} Joshua C. Fjelstul, Ph.D.",
author_names = "Joshua C. Fjelstul, Ph.D.",
theme_color = "#4D9FEB",
heading_font_size = 30,
subheading_font_size = 10,
title_font_size = 16,
table_of_contents = TRUE,
include_variable_type = TRUE
)
codebookr::create_codebook(
file_path = "example/codebook/codebook.tex",
datasets_input = euip_datasets,
variables_input = euip_variables,
title_text = "The European Union Infringement Procedure \\\\ (EUIP) Database",
version_text = "1.0",
footer_text = "The EUIP Database Codebook \\hspace{5pt} | \\hspace{5pt} Joshua C. Fjelstul, Ph.D.",
author_names = "Joshua C. Fjelstul, Ph.D.",
theme_color = "#4D9FEB",
heading_font_size = 30,
subheading_font_size = 10,
title_font_size = 16,
table_of_contents = TRUE,
include_variable_type = TRUE
)
# view example data
View(codebookr::euip_datasets)
View(codebookr::euip_variables)
# create a codebook
codebookr::create_codebook(
file_path = "example/codebook/codebook.tex",
datasets_input = euip_datasets,
variables_input = euip_variables,
title_text = "The European Union Infringement Procedure \\\\ (EUIP) Database",
version_text = "1.0",
footer_text = "The EUIP Database Codebook \\hspace{5pt} | \\hspace{5pt} Joshua C. Fjelstul, Ph.D.",
author_names = "Joshua C. Fjelstul, Ph.D.",
theme_color = "#4D9FEB",
heading_font_size = 30,
subheading_font_size = 10,
title_font_size = 16,
table_of_contents = TRUE,
include_variable_type = TRUE
)
# create a codebook
codebookr::create_codebook(
file_path = "codebook.tex",
datasets_input = euip_datasets,
variables_input = euip_variables,
title_text = "The European Union Infringement Procedure \\\\ (EUIP) Database",
version_text = "1.0",
footer_text = "The EUIP Database Codebook \\hspace{5pt} | \\hspace{5pt} Joshua C. Fjelstul, Ph.D.",
author_names = "Joshua C. Fjelstul, Ph.D.",
theme_color = "#4D9FEB",
heading_font_size = 30,
subheading_font_size = 10,
title_font_size = 16,
table_of_contents = TRUE,
include_variable_type = TRUE
)
# create a codebook
codebookr::create_codebook(
file_path = "codebook.pdf",
datasets_input = euip_datasets,
variables_input = euip_variables,
title_text = "The European Union Infringement Procedure \\\\ (EUIP) Database",
version_text = "1.0",
footer_text = "The EUIP Database Codebook \\hspace{5pt} | \\hspace{5pt} Joshua C. Fjelstul, Ph.D.",
author_names = "Joshua C. Fjelstul, Ph.D.",
theme_color = "#4D9FEB",
heading_font_size = 30,
subheading_font_size = 10,
title_font_size = 16,
table_of_contents = TRUE,
include_variable_type = TRUE
)
library(googledrive)
library(trackdown)
dir = "~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming"
setwd(dir)
# UPLOAD DATA
files2upload <- dir('data/NSS', full.names = TRUE)
googledrive::drive_auth(email = "stepanpaulik@gmail.com")
googledrive::with_drive_quiet(
purrr::map(.x = files2upload, ~ googledrive::drive_put(.x, path = "data/"))
)
library(googledrive)
library(trackdown)
dir = "~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming"
setwd(dir)
# UPLOAD DATA
files2upload <- dir('data/NSS', full.names = TRUE)
googledrive::drive_auth(email = "stepanpaulik@gmail.com")
googledrive::with_drive_quiet(
purrr::map(.x = files2upload, ~ googledrive::drive_put(.x, path = "data/"))
)
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
# source("scripts/WR_decisions_NSS.R")
#US
metadata = read_rds(file = "../data/US_metadata.rds")
texts = read_rds(file = "../data/US_texts.rds")
judges = readr::read_rds("../data/US_judges.rds")
clerks = readr::read_rds("../data/US_clerks.rds")
data = metadata %>% filter(judge_rapporteur_name == "Pavel Rychetský")
View(data)
View(data[[28]][[1]])
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
# source("scripts/WR_decisions_NSS.R")
#US
metadata = read_rds(file = "../data/US_metadata.rds")
texts = read_rds(file = "../data/US_texts.rds")
judges = readr::read_rds("../data/US_judges.rds")
clerks = readr::read_rds("../data/US_clerks.rds")
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
readr::write_rds(metadata, file = "../data/US_metadata.rds")
View(metadata)
View(metadata[[29]][[1]])
View(metadata[[28]][[3]])
View(metadata[[28]][[15]])
View(judges)
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
# source("scripts/WR_decisions_NSS.R")
#US
metadata = read_rds(file = "../data/US_metadata.rds")
texts = read_rds(file = "../data/US_texts.rds")
judges = readr::read_rds("../data/US_judges.rds")
clerks = readr::read_rds("../data/US_clerks.rds")
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
# source("scripts/WR_decisions_NSS.R")
#US
metadata = read_rds(file = "../data/US_metadata.rds")
texts = read_rds(file = "../data/US_texts.rds")
judges = readr::read_rds("../data/US_judges.rds")
clerks = readr::read_rds("../data/US_clerks.rds")
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
View(metadata)
View(metadata[[29]][[4]])
View(metadata[[29]][[1]])
View(metadata[[29]][[85]])
View(metadata[[29]][[127]])
View(metadata[[29]][[172]])
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
# source("scripts/WR_decisions_NSS.R")
#US
metadata = read_rds(file = "../data/US_metadata.rds")
texts = read_rds(file = "../data/US_texts.rds")
judges = readr::read_rds("../data/US_judges.rds")
clerks = readr::read_rds("../data/US_clerks.rds")
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
# source("scripts/WR_decisions_NSS.R")
#US
metadata = read_rds(file = "../data/US_metadata.rds")
texts = read_rds(file = "../data/US_texts.rds")
judges = readr::read_rds("../data/US_judges.rds")
clerks = readr::read_rds("../data/US_clerks.rds")
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
?map
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
get_compositions = function(metadata, texts, judges){
future::plan(multisession, workers = parallel::detectCores() - 2)
data = left_join(metadata, texts, by = join_by(doc_id)) %>%
mutate(composition = future_pmap(., function(doc_id, text, ...) judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id) %>%
distinct())) %>%
mutate(
citations = future_pmap(., function(doc_id, text, ...) str_extract_all(string = text, pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}') %>%
as_tibble_col(column_name = "citations") %>%
distinct())) %>%
select(-text)
return(data)
}
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
# source("scripts/WR_decisions_NSS.R")
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
texts$text[1] %>%
str_extract_all(string = ., pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}')
citation = texts$text[1] %>%
str_extract_all(string = ., pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}')
View(citation)
citation = texts$text[5] %>%
str_extract_all(string = ., pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}')
View(clerks)
View(citation)
str_remove_all(pattern = 'sp\\.\\s*zn\\.\\s*")
View(citation)
s
citation = texts$text[5] %>%
str_extract_all(string = ., pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}') %>%
citation = texts$text[5] %>%
str_extract_all(string = ., pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}') %>%
str_remove_all(pattern = 'sp\\.\\s*zn\\.\\s*')
citation = texts$text[5] %>%
str_extract_all(string = ., pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}') %>%
str_remove_all(pattern = 'sp\\.\\s*zn\\.\\s*') %>%
as_tibble_col(column_name = "citations")
View(citation)
citations
citation
citat
citation
View(citation)
View(citation)
citation$citations
citation = texts$text[5] %>%
str_extract_all(string = ., pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}') %>%
map(.x = ., str_remove_all(.x, pattern = 'sp\\.\\s*zn\\.\\s*'))
citation = texts$text[5] %>%
str_extract_all(string = ., pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}') %>%
map(.x = ., ~str_remove_all(.x, pattern = 'sp\\.\\s*zn\\.\\s*'))
View(citation)
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
library(tidyverse)
library(furrr)
get_dissents = function(metadata, texts, judges){
future::plan(multisession, workers = parallel::detectCores() - 2)
# The terms detecting paragraphs starting the dissenting opinion
dissent_term = paste("Odlišné stanovisko",
"ODLIŠNÉ STANOVISKO",
"O d l i š n é   s t a n o v i s k o",
"O d l i š n é  s t a n o v i s k o",
"Odlišné  stanovisko",
"O d l i š n é s t a n o v i s k o",
"O D L I Š N É  S T A N O V I S K O",
"Odlišné doplňující stanovisko",
"Odlišné-doplňující stanovisko", "Konkurující stanovisko", "K odlišnému stanovisku", sep = "|")
metadata %<>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
select(doc_id, dissenting_opinion)
data = texts %>%
filter(doc_id %in% metadata$doc_id) %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = future_pmap(., function(doc_id, paragraph, ...) judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = judge_initials)) %>%
select(judge_name, judge_id) %>%
distinct())) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id) %>%
group_by(doc_id) %>%
arrange(desc(dissenting_group)) %>% # removes duplicates because of the "We join the dissent of...", the first occurring name is joined to the larger group
distinct(dissenting_judge, .keep_all = TRUE) %>%
arrange(dissenting_group) %>%
ungroup() %>%
left_join(metadata, ., by = join_by(doc_id, dissenting_opinion == dissenting_judge))
return(data)
}
get_compositions = function(metadata, texts, judges){
future::plan(multisession, workers = parallel::detectCores() - 2)
data = left_join(metadata, texts, by = join_by(doc_id)) %>%
mutate(composition = future_pmap(., function(doc_id, text, ...) judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id) %>%
distinct())) %>%
mutate(
citations = future_pmap(., function(doc_id, text, ...) str_extract_all(string = text, pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}') %>%
as_tibble_col(column_name = "citations") %>%
distinct())) %>%
select(-text)
return(data)
}
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
# source("scripts/WR_decisions_NSS.R")
#US
metadata = read_rds(file = "../data/US_metadata.rds")
texts = read_rds(file = "../data/US_texts.rds")
judges = readr::read_rds("../data/US_judges.rds")
clerks = readr::read_rds("../data/US_clerks.rds")
source("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/apex_courts_dataset/scripts/US_master.R", echo=TRUE)
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
View(metadata)
View(metadata[[29]][[2]])
View(metadata[[29]][[81]])
View(metadata[[29]][[91925]])
View(metadata[[28]][[91880]])
View(metadata[[29]][[91877]])
readr::write_rds(metadata, file = "../data/US_metadata.rds")
