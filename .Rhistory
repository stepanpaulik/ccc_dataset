geom_smooth(method = "lm")
data_metadata %>%
mutate(merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility")) %>%
filter(merits_admissibility %in% c("merits", "admissibility")) %>%
group_by(year(date_submission)) %>%
summarise(caseload = n(),
avg_length = mean(length_proceeding)) %>%
ggplot(aes(y = caseload, x = avg_length)) +
geom_smooth(method = "lm", se = NULL)
?geom_smooth
data_metadata %>%
mutate(merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility")) %>%
filter(merits_admissibility %in% c("merits", "admissibility")) %>%
group_by(year(date_submission)) %>%
summarise(caseload = n(),
avg_length = mean(length_proceeding)) %>%
ggplot(aes(y = caseload, x = avg_length)) +
geom_smooth(method = "lm", se = F)
data_metadata %>%
mutate(merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility")) %>%
filter(merits_admissibility %in% c("merits", "admissibility")) %>%
group_by(year(date_submission)) %>%
summarise(caseload = n(),
avg_length = mean(length_proceeding)) %>%
ggplot(aes(y = caseload, x = avg_length)) +
geom_point() +
geom_smooth(method = "lm", se = F)
data_metadata %>%
mutate(merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility")) %>%
filter(merits_admissibility %in% c("merits", "admissibility")) %>%
group_by(year(date_submission)) %>%
summarise(caseload = n(),
avg_length = mean(length_proceeding)) %>%
filter(avg_length < 400) %>%
ggplot(aes(y = caseload, x = avg_length)) +
geom_point() +
geom_smooth(method = "lm", se = F)
data_metadata %>%
mutate(merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility")) %>%
filter(merits_admissibility %in% c("merits", "admissibility")) %>%
group_by(year(date_submission)) %>%
summarise(caseload = n(),
avg_length = mean(length_proceeding)) %>%
filter(avg_length < 400) %>%
ggplot(aes(y = caseload, x = avg_length)) +
geom_point() +
geom_smooth(method = "lm", se = F, color = "black")
data_metadata %>%
mutate(merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility")) %>%
filter(merits_admissibility %in% c("merits", "admissibility")) %>%
group_by(year(date_submission)) %>%
summarise(caseload = n(),
avg_length = mean(length_proceeding)) %>%
filter(avg_length < 400) %>%
ggplot(aes(y = caseload, x = avg_length)) +
geom_point() +
geom_smooth(method = "lm", se = F, color = "black") +
xlabs(x = "Average length of proceedings before the CCC", y = "Yearly caseload")
data_metadata %>%
mutate(merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility")) %>%
filter(merits_admissibility %in% c("merits", "admissibility")) %>%
group_by(year(date_submission)) %>%
summarise(caseload = n(),
avg_length = mean(length_proceeding)) %>%
filter(avg_length < 400) %>%
ggplot(aes(y = caseload, x = avg_length)) +
geom_point() +
geom_smooth(method = "lm", se = F, color = "black") +
labs(x = "Average length of proceedings before the CCC", y = "Yearly caseload")
data_metadata %>%
mutate(merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility")) %>%
filter(merits_admissibility %in% c("merits", "admissibility")) %>%
group_by(year(date_submission)) %>%
summarise(caseload = n(),
avg_length = mean(length_proceeding)) %>%
filter(avg_length < 400) %>%
ggplot(aes(y = caseload, x = avg_length)) +
geom_point() +
geom_smooth(method = "lm", se = F, color = "black") +
labs(x = "Average length of proceedings before the CCC", y = "Yearly caseload of the CCC")
library(tidyverse); theme_set(theme_minimal())
library(patchwork)
# case-level variables ----------------------------------------------------
data_metadata = read_rds("../data/US_metadata.rds") %>%
mutate(presence_dissent = if_else(is.na(as.character(dissenting_opinion)), "None", "At least 1"),
merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility"))
data_dissents = read_rds("../data/US_dissents.rds")
data_metadata %>%
filter(merits_admissibility %in% c("merits", "admissibility")) %>%
group_by(year(date_submission)) %>%
summarise(caseload = n(),
avg_length = mean(length_proceeding)) %>%
filter(avg_length < 400) %>%
ggplot(aes(y = caseload, x = avg_length)) +
geom_point() +
geom_smooth(method = "lm", se = F, color = "black") +
labs(x = "Average length of proceedings before the CCC", y = "Yearly caseload of the CCC")
caseload = data_metadata %>%
mutate(merits_admissibility = case_when(
str_detect(as.character(type_verdict), "vyhověno|zamítnuto") ~ "merits",
str_detect(as.character(type_verdict), "procesní") & !str_detect(as.character(type_verdict), "vyhověno|zamítnuto|odmítnutno") ~ "procedural",
.default = "admissibility")) %>%
ggplot(aes(x = year(date_submission), fill = merits_admissibility)) +
geom_bar(position = position_stack(reverse = TRUE))  +
scale_x_continuous(breaks = seq(1991, 2023, 2)) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = NULL, y = NULL, fill = "Type of verdict")
dissents_distribution_judges = data_dissents %>%
group_by(doc_id) %>%
count() %>%
ungroup() %>%
ggplot(aes(x = n)) +
geom_bar() +
scale_x_continuous(breaks = seq(1, 9, 1))
dissents_distribution_opinions = data_dissents %>%
group_by(doc_id) %>%
summarise(n = length(unique(dissenting_group))) %>%
ungroup() %>%
ggplot(aes(x = n)) +
geom_bar() +
scale_x_continuous(breaks = seq(1, 9, 1)) +
labs(x = "Number of dissenting opinions", y = "Count")
dissents_prevalence = data_metadata %>%
filter(type_decision == "Nález" | formation == "Plenum") %>%
ggplot(aes(x = forcats::fct_infreq(presence_dissent))) +
geom_bar() +
labs(x = NULL, y = NULL)
# judge-level variables ---------------------------------------------------
data_judges = read_rds(file = "../data/US_judges.rds")
data_clerks = read_rds("../data/US_clerks.rds")
alma_mater = data_judges %>%
ggplot(aes(x = judge_uni, fill = judge_uni)) +
scale_fill_brewer(palette="Pastel1") +
geom_bar() +
labs(x = NULL, y = NULL)
average_age = data_judges %>%
unnest(term) %>%
mutate(age = year(judge_term_start) - judge_yob) %>%
ggplot(aes(x = age)) +
geom_density() +
labs(x = "Age (years) of a justice at the start of their term", y = NULL)
average_age
gender_judges = data_judges %>%
unnest(term) %>%
ggplot(aes(x = judge_term_court, fill = judge_gender, color = judge_gender)) +
geom_bar(position = "dodge", show.legend = FALSE) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 5)) +
scale_color_brewer(palette="Pastel1", direction = -1) +
scale_fill_brewer(palette="Pastel1", direction = -1) +
labs(x = "Terms of the CCC", y = NULL, subtitle = "Justices") +
theme(legend.title = element_blank())
gender_judges
gender_clerks = data_clerks %>%
distinct(clerk_name, .keep_all = TRUE) %>%
ggplot(aes(x = clerk_gender, fill = clerk_gender)) +
scale_color_brewer(palette="Pastel1", direction = -1) +
scale_fill_brewer(palette="Pastel1", direction = -1) +
geom_bar() +
theme(legend.title = element_blank(),
axis.text.x = element_blank()) +
labs(x = NULL, y = NULL, subtitle = "Clerks")
gender_clerks
gender_clerks_judges = data_clerks %>%
distinct(clerk_name, .keep_all = TRUE) %>%
left_join(., data_judges %>% select(judge_name, judge_gender)) %>%
ggplot(aes(x = clerk_gender, fill = clerk_gender)) +
scale_color_brewer(palette="Pastel1", direction = -1) +
scale_fill_brewer(palette="Pastel1", direction = -1) +
geom_bar() +
theme(legend.title = element_blank(),
axis.text.x = element_blank()) +
labs(x = NULL, y = NULL, subtitle = "Clerks") +
facet_wrap(~judge_gender)
rm(list=ls(pattern="^data_"))
save.image(file = "report/descriptive_statistics.RData")
knitr::opts_chunk$set(echo = FALSE)
load(file = "descriptive_statistics.RData")
library(patchwork)
library(tidyverse); theme_set(theme_minimal())
load(file = "../../court_dissents/models/models_fitted_coalition_panel.RData")
caseload
gender_clerks_judges
average_age
US_metadata <- readRDS("C:/Users/stepa/OneDrive - Humboldt-Universitaet zu Berlin, CMS/Programming/data/US_metadata.rds")
View(US_metadata)
source("scripts/WR_decisions_US.R")
# source("scripts/WR_decisions_NSS.R")
#US
US_IDs_new = read_rds(file = "../data/US_IDs.rds")
metadata_new2 = get_metadata(US_IDs_new[1:50])
View(metadata_new2)
source("scripts/WR_decisions_US.R")
US_IDs_new = get_urls()
get_urls = function(decision_date = "1.1.1993") {
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=F, chromever = NULL)
remDr = rD[["client"]]
message("Scraping decision addresses")
remDr$navigate("https://nalus.usoud.cz/Search/Search.aspx")
remDr$findElement(using = "id", value = "ctl00_MainContent_decidedFrom")$clearElement()
remDr$findElement(using = "id", value = "ctl00_MainContent_decidedFrom")$sendKeysToElement(list(decision_date))
remDr$findElements("id", "ctl00_MainContent_but_search")[[1]]$clickElement()
html = remDr$getPageSource()[[1]]
# Get number of pages
pages = html %>%
read_html() %>%
html_text() %>%
str_extract(pattern = "z celkem [0-9]+") %>%
str_extract(pattern = "[0-9]+") %>%
as.numeric()
numberPages = ceiling(pages/20)
pb = progress_bar$new(
format = "  scraping addresses [:bar] :percent eta: :eta",
total = numberPages, clear = FALSE, width= 60)
decisions_id = foreach(i = seq(numberPages), .combine = "c") %do% {
html = remDr$getPageSource()[[1]]
output = read_html(html) %>%
html_elements(xpath = "//a[contains(@class, 'resultData')]") %>%
html_attr('href') %>%
paste0("https://nalus.usoud.cz/Search/", .)
remDr$findElements("xpath", "/html/body/form/div[4]/table/tbody/tr[4]/td/table/tbody/tr/td/a[last()]")[[1]]$clickElement()
pb$tick()
return(output)
}
return(decisions_id)
remDr$close()
rD[["server"]]$stop()
message("Done with scraping URL addresses.")
}
US_IDs_new = get_urls()
get_urls = function(decision_date = "1.1.1993") {
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=F, chromever = NULL)
remDr = rD[["client"]]
message("Scraping decision addresses")
remDr$navigate("https://nalus.usoud.cz/Search/Search.aspx")
remDr$findElement(using = "id", value = "ctl00_MainContent_decidedFrom")$clearElement()
remDr$findElement(using = "id", value = "ctl00_MainContent_decidedFrom")$sendKeysToElement(list(decision_date))
remDr$findElements("id", "ctl00_MainContent_but_search")[[1]]$clickElement()
html = remDr$getPageSource()[[1]]
# Get number of pages
pages = html %>%
read_html() %>%
html_text() %>%
str_extract(pattern = "z celkem [0-9]+") %>%
str_extract(pattern = "[0-9]+") %>%
as.numeric()
numberPages = ceiling(pages/20)
pb = progress_bar$new(
format = "  scraping addresses [:bar] :percent eta: :eta",
total = numberPages, clear = FALSE, width= 60)
decisions_id = foreach(i = seq(numberPages), .combine = "c") %do% {
html = remDr$getPageSource()[[1]]
output = read_html(html) %>%
html_elements(xpath = "//a[contains(@class, 'resultData')]") %>%
html_attr('href') %>%
paste0("https://nalus.usoud.cz/Search/", .)
remDr$findElements("xpath", "/html/body/form/div[4]/table/tbody/tr[4]/td/table/tbody/tr/td/a[last()]")[[1]]$clickElement()
pb$tick()
return(output)
}
return(decisions_id)
remDr$close()
rD[["server"]]$stop()
message("Done with scraping URL addresses.")
}
get_urls()
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=F, chromever = NULL)
install.packages("RSelenium")
install.packages("RSelenium")
install.packages("RSelenium")
install.packages("RSelenium")
install.packages("RSelenium")
library(RSelenium)
library(tidyverse)
library(rvest)
library(foreach)
library(httr)
library(xml2)
library(progress)
library(lubridate)
library(parallel)
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=F, chromever = NULL)
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=F)
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)))
as.integer(sample(x = 3000:5000, 1))
rD = rsDriver(browser="chrome", port=as.integer(sample(x = 3000:5000, 1)), verbose=F, chromever = NULL)
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=F, chromever = NULL)
install.packages(c("brew", "brio", "checkmate", "cli", "curl", "data.table", "DBI", "desc", "DiceDesign", "DT", "e1071", "fansi", "filelock", "future", "future.apply", "gert", "ggridges", "htmlwidgets", "httpuv", "igraph", "ISOcodes", "jsonlite", "keyring", "later", "LiblineaR", "magick", "maps", "markdown", "matrixStats", "pingr", "pkgbuild", "processx", "progress", "QuickJSR", "ragg", "RcppArmadillo", "recipes", "s2", "sass", "sf", "stringi", "svglite", "tarchetypes", "targets", "tensorA", "testthat", "timeDate", "V8", "vctrs", "vroom", "xgboost", "yaml"))
install.packages(c("mgcv", "rpart"), lib="/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library")
library(RSelenium)
library(tidyverse)
library(rvest)
library(foreach)
library(httr)
library(xml2)
library(progress)
library(lubridate)
library(parallel)
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=F, chromever = NULL)
?rsDriver
binman::list_versions("geckodriver")
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=F, geckover = "0.32.1", chromever = NULL)
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=F, geckover = "0.32.1", chromever = NULL)
startServer()
library(RSelenium)
library(tidyverse)
library(rvest)
library(foreach)
library(httr)
library(xml2)
library(progress)
library(lubridate)
library(parallel)
startServer()
RSelenium::startServer()
?startServer
library(RSelenium)
?rsDriver
rD = rsDriver(browser="chrome", port=as.integer(sample(x = 3000:5000, 1)))
errorDetails()
rD = rsDriver(browser="chrome", port=as.integer(sample(x = 3000:5000, 1)))
rD = rsDriver(browser="chrome", port=as.integer(sample(x = 3000:5000, 1)))
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)))
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=F, extraCapabilities = list(acceptInsecureCerts = TRUE))
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=T, extraCapabilities = list(acceptInsecureCerts = TRUE))
rD = rsDriver(browser="firefox", port=5555L, verbose=T, extraCapabilities = list(acceptInsecureCerts = TRUE))
remove.packages("RSelenium")
library(RSelenium)
library(tidyverse)
library(rvest)
library(foreach)
library(httr)
library(xml2)
library(progress)
library(lubridate)
library(parallel)
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=T, extraCapabilities = list(acceptInsecureCerts = TRUE))
binman::list_versions("chromedriver")
rD = rsDriver(browser="chrome", port=as.integer(sample(x = 3000:5000, 1)), verbose=T, extraCapabilities = list(acceptInsecureCerts = TRUE))
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=T, extraCapabilities = list(acceptInsecureCerts = TRUE))
rD = rsDriver(browser="firefox", port=as.integer(sample(x = 3000:5000, 1)), verbose=T, extraCapabilities = list(acceptInsecureCerts = TRUE), chromever = NULL)
rD = rsDriver(browser="chrome", port=as.integer(sample(x = 3000:5000, 1)), verbose=T)
source("~/Library/CloudStorage/OneDrive-Humboldt-UniversitaetzuBerlin,CMS/Programming/apex_courts_dataset/scripts/WR_decisions_US.R", echo=TRUE)
remDr$navigate("https://nalus.usoud.cz/Search/Search.aspx")
rD = rsDriver(browser="chrome", port=as.integer(sample(x = 3000:5000, 1)), verbose=T)
remDr = rD[["client"]]
remDr$navigate("https://nalus.usoud.cz/Search/Search.aspx")
source("scripts/WR_decisions_US.R")
US_IDs_new = get_urls()
source("scripts/WR_decisions_US.R")
#US
US_IDs_new = read_rds(file = "../data/US_IDs.rds")
metadata_new = get_metadata(US_IDs_new)
write_rds(metadata_new, file = "../data/US_metadata.rds")
texts_new = get_texts(metadata = metadata_new)
View(metadata_new)
View(texts_new)
View(metadata_new)
View(metadata_new)
length(unique(metadata_new$doc_id))
metadata_new %>%
group_by(doc_id) %>%
duplicates = metadata_new %>%
group_by(doc_id) %>%
filter(n() > 1)
metadata_new %>%
group_by(doc_id)
duplicates = metadata_new %>%
group_by(doc_id) %>%
filter(n() > 1)
View(duplicates)
metadata_new %>%
distinct()
View(metadata_new)
metadata_new = metadata_new %>% distinct()
metadata_new = metadata_new %>% distinct() %>%
write_rds(., file = "../data/US_metadata.rds")
write_rds(texts_new, file = "../data/US_texts.rds")
metadata_new
metadata = read_rds(file = "../data/US_metadata.rds")
metadata = read_rds(file = "../data/US_metadata.rds")
library(tidyverse)
metadata = read_rds(file = "../data/US_metadata.rds")
texts = read_rds(file = "../data/US_texts.rds")
judges = readr::read_rds("../data/US_judges.rds")
plan(multisession, workers = parallel::detectCores() - 2)
library(tidyverse)
library(furrr)
plan(multisession, workers = parallel::detectCores() - 2)
# The terms detecting paragraphs starting the dissenting opinion
dissent_term = paste("Odlišné stanovisko",
"ODLIŠNÉ STANOVISKO",
"O d l i š n é   s t a n o v i s k o",
"O d l i š n é  s t a n o v i s k o",
"Odlišné  stanovisko",
"O d l i š n é s t a n o v i s k o",
"O D L I Š N É  S T A N O V I S K O",
"Odlišné doplňující stanovisko",
"Odlišné-doplňující stanovisko", "Konkurující stanovisko", "K odlišnému stanovisku", sep = "|")
View(metadata)
metadata %<>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
select(doc_id, dissenting_opinion)
View(metadata)
View(metadata)
metadata = read_rds(file = "../data/US_metadata.rds")
texts = read_rds(file = "../data/US_texts.rds")
judges = readr::read_rds("../data/US_judges.rds")
data = left_join(metadata, texts, by = join_by(doc_id)) %>%
mutate(composition = pmap(., function(doc_id, text, ...) judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
select(-text)
library(tidyverse)
source("scripts/US_web_scraping.R")
source("scripts/US_supporting_functions.R")
metadata_new = get_metadata(read_rds(file = "../data/US_IDs.rds"))
distinct(metadata)
distinct(metadata_new)
metadata = metadata_new %>%
distinct()
readr::write_rds(metadata, file = "../data/US_metadata.rds")
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
texts = read_rds(file = "../data/US_texts.rds")
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
judges = readr::read_rds("../data/US_judges.rds")
metadata = metadata %>%
get_compositions(metadata = ., texts = texts, judges = judges)
View(metadata)
View(metadata[[28]][[1]])
View(metadata[[28]][[46170]])
View(metadata[[28]][[46170]])
View(metadata[[28]][[46171]])
View(metadata_new)
View(metadata)
View(metadata[[28]][[7]])
View(metadata[[28]][[5]])
View(metadata[[29]][[5]])
View(metadata[[28]][[4]])
View(metadata[[28]][[3]])
View(metadata[[28]][[3]])
View(metadata[[28]][[5]])
View(texts)
View(metadata[[29]][[5]])
View(metadata[[28]][[4]])
View(metadata[[28]][[6]])
View(metadata[[28]][[5]])
View(metadata[[29]][[5]])
View(metadata[[28]][[11]])
metadata = metadata_new %>%
distinct()
View(metadata)
readr::write_rds(metadata, file = "../data/US_metadata.rds")
View(metadata)
View(texts)
future::plan(multisession, workers = parallel::detectCores() - 2)
data = left_join(metadata, texts, by = join_by(doc_id)) %>%
mutate(composition = future_pmap(., function(doc_id, text, ...) judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
mutate(
citations = future_pmap(., function(doc_id, text, ...) str_extract_all(string = text, pattern = 'sp\\.\\s*zn\\.\\s*[A-Za-z]{1,2}\\.\\s*ÚS\\s*\\d{1,4}\\/\\d{1,4}') %>%
as_tibble_col(column_name = "citations"))) %>%
select(-text)
View(data)
View(data[[28]][[1]])
View(data[[28]][[2]])
View(data[[28]][[3]])
View(data[[29]][[3]])
View(data[[29]][[2]])
View(data[[29]][[1]])
View(data)
readr::write_rds(data, file = "../data/US_metadata.rds")
dissents = get_dissents(metadata, texts, judges)
View(dissents)
readr::write_rds(dissents, file = "../data/US_dissents.rds")
#US
metadata = read_rds(file = "../data/US_metadata.rds")
library(tidyverse)
#US
metadata = read_rds(file = "../data/US_metadata.rds")
View(metadata)
