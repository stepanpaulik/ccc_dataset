US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id) %>%
group_by(doc_id) %>%
arrange(desc(dissenting_group)) %>%
distinct(dissenting_judge, .keep_all = TRUE) %>%
arrange(dissenting_group) %>%
ungroup()
View(US_dissents)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
select(doc_id, date_decision, dissenting_opinion)
US_metadata = US_metadata %>%
left_join(., US_dissents, by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_dissents)
View(US_metadata)
View(US_metadata)
# Load data
US_metadata = readr::read_rds("../data/US_metadata.rds") %>%
filter(!is.na(dissenting_opinion)) %>%
unnest(dissenting_opinion) %>%
select(doc_id, dissenting_opinion)
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id) %>%
group_by(doc_id) %>%
arrange(desc(dissenting_group)) %>% # removes duplicates because of the "We join the dissent of..."
distinct(dissenting_judge, .keep_all = TRUE) %>%
arrange(dissenting_group) %>%
ungroup() %>%
left_join(US_metadata, ., by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_dissents)
# The terms detecting paragraphs starting the dissenting opinion
dissent_term = paste("Odlišné stanovisko",
"ODLIŠNÉ STANOVISKO",
"O d l i š n é   s t a n o v i s k o",
"O d l i š n é  s t a n o v i s k o",
"Odlišné  stanovisko",
"O d l i š n é s t a n o v i s k o",
"O D L I Š N É  S T A N O V I S K O",
"Odlišné doplňující stanovisko",
"Odlišné-doplňující stanovisko", "Konkurující stanovisko", "K odlišnému stanovisku", sep = "|")
US_dissents = US_texts %>%
mutate(paragraph = str_split(string = text, pattern = "\n+")) %>%
select(-text) %>%
unnest(paragraph) %>%
group_by(doc_id) %>%
mutate(paragraph_id = row_number()) %>%
ungroup() %>%
filter(str_detect(string = paragraph, pattern = dissent_term)) %>% # Up until here the code splits up the texts into paragraphs and filters those which contain the dissent_term strings
mutate(dissenting_judge = pmap(., function(doc_id, paragraph, ...) US_judges %>%
filter(str_detect(string = paragraph, pattern = judge_name_lemmatized)|str_detect(string = paragraph, pattern = initials)) %>%
select(judge_name, judge_id))) %>% # A parallel map to detect the judge names/initials in the paragraphs and to keep the doc_id as well
group_by(doc_id) %>%
mutate(dissenting_group = row_number()) %>% # Finally assign an identifier of whether the dissent was written together or separately
ungroup() %>%
unnest(dissenting_judge) %>%
select(-c(paragraph, paragraph_id)) %>%
rename(dissenting_judge = judge_name,
dissenting_judge_id = judge_id) %>%
group_by(doc_id) %>%
arrange(desc(dissenting_group)) %>% # removes duplicates because of the "We join the dissent of..."
distinct(dissenting_judge, .keep_all = TRUE) %>%
arrange(dissenting_group) %>%
ungroup() %>%
left_join(US_metadata, ., by = join_by(doc_id, dissenting_opinion == dissenting_judge))
View(US_metadata)
View(US_dissents)
# Save data
readr::write_rds(US_dissents, file = "../data/US_dissents.rds")
source("scripts/WR_decisions_US.R")
source("scripts/WR_decisions_NSS.R")
#US
metadata = read_rds(file = "../data/US_metadata.rds")
texts_new = get_texts(metadata = metadata)
texts_new = get_texts(metadata = metadata[1:1000,])
View(texts_new)
texts_new = get_texts(metadata = metadata[90000:93472,])
source("scripts/WR_decisions_US.R")
source("scripts/WR_decisions_NSS.R")
#US
metadata = read_rds(file = "../data/US_metadata.rds")
metadata %>%
left_join(.,read_rds(file = "../data/US_texts.rds"))
warnings()
metadata %>%
left_join(.,read_rds(file = "../data/US_texts.rds")) %>%
filter(text == NA)
texts = metadata %>%
left_join(.,read_rds(file = "../data/US_texts.rds")) %>%
filter(text == NA)
texts = metadata %>%
left_join(.,read_rds(file = "../data/US_texts.rds"))
View(texts)
texts = metadata %>%
left_join(.,read_rds(file = "../data/US_texts.rds")) %>%
filter(is.na(text))
View(texts)
texts = read_rds(file = "../data/US_texts.rds")
View(texts)
metadata = metadata %>%
left_join(.,read_rds(file = "../data/US_texts.rds")) %>%
filter(is.na(text))
View(metadata)
#US
metadata = read_rds(file = "../data/US_metadata.rds")
metadata_new = metadata %>%
left_join(.,read_rds(file = "../data/US_texts.rds")) %>%
filter(is.na(text))
texts = read_rds(file = "../data/US_texts.rds")
texts_new = get_texts(metadata = metadata_new)
View(texts_new)
bind_rows(texts, texts_new)
bind_rows(texts, texts_new) %>%
write_rds(., file = "../data/US_texts.rds")
texts = read_rds(file = "../data/US_texts.rds")
View(texts)
texts = read_rds(file = "../data/US_texts.rds") %>%
group_by(doc_id) %>%
filter(n()>1)
View(texts)
metadata = read_rds(file = "../data/US_metadata.rds")
texts = read_rds(file = "../data/US_texts.rds")
View(metadata)
View(texts)
left_join(metadata, texts)
left_join(metadata, texts) %>%
filter(is.na(text))
View(texts)
left_join(metadata, texts) %>%
filter(is.na(text)) %>%
select(doc_id, text)
left_join(metadata, texts) %>%
select(doc_id, text)
View(texts)
texts %>%
group_by(text) %>%
filter(n()>1)
duplicates = texts %>%
group_by(text) %>%
filter(n()>1)
View(duplicates)
left_join(metadata, texts) %>%
select(doc_id, text)
left_join(metadata, texts) %>%
select(doc_id, text) %>%
write_rds(., file = "../data/US_texts.rds")
texts = read_rds(file = "../data/US_texts.rds")
library(tidyverse)
library(furrr)
# Load data
US_texts = readr::read_rds("../data/US_texts.rds")
US_judges = readr::read_rds("../data/US_judges.rds")
# Parallel
myCluster = parallel::makeCluster(parallel::detectCores() - 2, # number of cores to use
type = "PSOCK")
doParallel::registerDoParallel(myCluster)
foreach::getDoParRegistered()
foreach::getDoParWorkers()
plan(multisession, workers = parallel::detectCores() - 2)
US_texts %>%
slice_head(n = 100) %>%
mutate(judges = future_pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id)), .progress = TRUE) %>%
unnest(judges)
?future_pmap
library(tidyverse)
library(furrr)
# Load data
US_texts = readr::read_rds("../data/US_texts.rds")
US_judges = readr::read_rds("../data/US_judges.rds")
plan(multisession, workers = parallel::detectCores() - 2)
plan(multisession, workers = parallel::detectCores() - 2)
?plan
US_texts %>%
slice_head(n = 100) %>%
mutate(judges = future_pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
unnest(judges)
tic()
install.packages("tictoc")
library(tictoc)
tic()
US_texts %>%
slice_head(n = 100) %>%
mutate(judges = future_pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
unnest(judges)
toc()
tic()
US_texts %>%
slice_head(n = 100) %>%
mutate(judges = pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
unnest(judges)
toc()
tic()
US_texts %>%
slice_head(n = 1000) %>%
mutate(judges = future_pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
unnest(judges)
toc()
tic()
US_texts %>%
slice_head(n = 1000) %>%
mutate(judges = pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
unnest(judges)
toc()
library(tidyverse)
library(furrr)
# Load data
US_texts = readr::read_rds("../data/US_texts.rds")
US_judges = readr::read_rds("../data/US_judges.rds")
plan(multisession, workers = parallel::detectCores() - 2)
tictoc::tic()
US_texts %>%
mutate(judges = pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
unnest(judges)
library(tidyverse)
library(furrr)
# Load data
US_texts = readr::read_rds("../data/US_texts.rds")
US_judges = readr::read_rds("../data/US_judges.rds")
plan(multisession, workers = parallel::detectCores() - 2)
?future_pmap
tictoc::tic()
US_texts %>%
mutate(judges = pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id)), ) %>%
unnest(judges)
tictoc::toc()
?plan
tictoc::tic()
US_compositions = US_texts %>%
mutate(judges = pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id)), ) %>%
unnest(judges)
tictoc::tic()
US_compositions = US_texts %>%
mutate(judges = pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
unnest(judges) %>%
select(-text)
library(tidyverse)
library(furrr)
# Load data
US_texts = readr::read_rds("../data/US_texts.rds")
US_judges = readr::read_rds("../data/US_judges.rds")
plan(multisession, workers = parallel::detectCores() - 2)
tictoc::tic()
US_compositions = US_texts %>%
mutate(judges = future_pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
unnest(judges) %>%
select(-text)
tictoc::toc()
# Save data
write_rds(US_compositions, file = "../data/US_compositions.rds")
US_metadata = readr::read_rds("../data/US_metadata.rds")
plan(multisession, workers = parallel::detectCores() - 2)
tictoc::tic()
US_compositions = left_join(US_metadata, US_texts) %>%
mutate(judges = future_pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
select(-text)
tictoc::toc()
View(US_metadata)
US_texts = readr::read_rds("../data/US_texts.rds")
US_judges = readr::read_rds("../data/US_judges.rds")
US_metadata = readr::read_rds("../data/US_metadata.rds")
left_join(US_metadata, US_texts)
left_join(US_metadata, US_texts)[1:100,]
US_compositions = left_join(US_metadata, US_texts)[1:100,] %>%
mutate(judges = future_pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
select(-text)
tictoc::toc()
US_compositions = left_join(US_metadata, US_texts)[1:100,] %>%
mutate(composition = future_pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
select(-text)
View(US_compositions)
View(US_compositions[[26]][[1]])
View(US_compositions[[26]][[2]])
tictoc::tic()
US_compositions = left_join(US_metadata, US_texts) %>%
mutate(composition = future_pmap(., function(doc_id, text, ...) US_judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
select(-text)
tictoc::toc()
View(US_metadata)
View(US_compositions)
View(US_compositions[[26]][[13]])
View(US_compositions[[26]][[15]])
View(US_compositions[[26]][[13]])
View(US_judges)
library(tidyverse)
data_judges <- tribble(
~judge_name, ~judge_name_lemmatized, ~yob, ~gender, ~uni, ~education, ~profession, ~start, ~end,
"Iva Brožová", "Iv[a-ž]*\\s*Brožov[a-ž]*", 1951, "F", "MUNI", "judr", "judge", "15.7.1993", "8.12.1999",
"Vojtěch Cepl", "Vojtěch[a-ž]*\\s*Cepl[a-ž]*", 1938, "M", "CUNI", "prof", "scholar", "15.7.1993", "15.7.2003",
"Vladimír Čermák", "Vladimír[a-ž]*\\s*Čermák[a-ž]*", 1929, "M", "CUNI", "prof", "scholar", "15.7.1993", "15.7.2003",
"Miloš Holeček", "Miloš[a-ž]*\\s*Holeč[a-ž]*", 1950, "M", "CUNI", "judr", "judge", "15.7.1993", "15.7.2003",
"Vladimír Jurka", "Vladimír[a-ž]*\\s*Jur[a-ž]*", 1948, "M", "KOM", "judr", "judge", "15.7.1993", "15.7.2003",
"Zdeněk Kessler", "Zde[a-ž]*\\s*Kessler[a-ž]*", 1929, "M", "MUNI", "judr", "politician", "15.7.1993", "12.2.2003",
"Vladimír Klokočka", "Vladimír[a-ž]*\\s*Klokočk[a-ž]*", 1929, "M", "CUNI", "prof", "scholar", "15.7.1993", "15.7.2003",
"Vladimír Paul", "Vladimír[a-ž]*\\s*Paul[a-ž]*", 1924, "M", "CUNI", "judr", "lawyer", "15.7.1993", "3.4.2002",
"Antonín Procházka", "Antonín[a-ž]*\\s*Procházk[a-ž]*", 1927, "M", "MUNI", "judr", "lawyer", "15.7.1993", "15.7.2003",
"Vlastimil Ševčík", "Vlastimil[a-ž]*\\s*Ševčík[a-ž]*", 1927, "M", "MUNI", "judr", "judge", "15.7.1993", "15.12.2002",
"Eva Zarembová", "Ev[a-ž]*\\s*Zarembov[a-ž]*", 1946, "F", "CUNI", "judr", "judge", "9.11.1993", "9.11.2003",
"Pavel Varvařovský", "Pav[a-ž]*\\s*Varvařovsk[a-ž]*", 1945, "M", "CUNI", "judr", "judge", "29.3.1994", "29.3.2004",
"Jiří Malenovský", "Jiří[a-ž]*\\s*Malenovsk[a-ž]*", 1950, "M", "MUNI", "prof", "scholar", "4.4.2000", "8.5.2004",
"Eliška Wagnerová", "Elišk[a-ž]*\\s*W(a|á)gner[a-ž]*", 1948, "F", "CUNI", "phd", "scholar", "20.3.2002", "20.3.2012",
"František Duchoň", "Františ[a-ž]*\\s*Ducho[a-ž]*", 1946, "M", "CUNI", "judr", "judge", "6.6.2002", "6.6.2012",
"Dagmar Lastovecká", "Dagmar Lastoveck[a-ž]*", 1951, "F", "MUNI", "judr", "politician", "29.8.2003", "29.8.2013",
"Pavel Holländer", "Pav[a-ž]*\\s*Holländer[a-ž]*", 1953, "M", "KOM", "prof", "scholar", "15.7.1993", "6.8.2013",
"Vojen Güttler", "Vojen[a-ž]*\\s*G(ü|ű|u|ú)t(|t)ler[a-ž]*", 1934, "M", "CUNI", "judr", "politician", "15.7.1993", "6.8.2013",
"Miloslav Výborný", "Miloslav[a-ž]*\\s*Výborn[a-ž]*", 1952, "M", "CUNI", "judr", "politician", "3.6.2003", "3.6.2013",
"Jiří Mucha", "Jiří[a-ž]*\\s*Much[a-ž]*", 1946, "M", "CUNI", "judr", "lawyer", "28.1.2003", "28.1.2013",
"Jiří Nykodým", "Jiří[a-ž]*\\s*Nykodým[a-ž]*", 1945, "M", "CUNI", "judr", "lawyer", "17.12.2003", "17.12.2013",
"Stanislav Balík", "Stanislav[a-ž]*\\s*Balík[a-ž]*", 1956, "M", "CUNI", "phd", "lawyer", "26.5.2004", "26.5.2014",
"Michaela Židlická", "Michael[a-ž]*\\s*Židlick[a-ž]*", 1952, "F", "MUNI", "doc", "scholar", "16.6.2004", "16.6.2014",
"Ivana Janů", "Ivan[a-ž]*\\s*Janů", 1946, "F", "CUNI", "judr", "politician", c("9.11.1993", "16.9.2004"), c("9.11.2003", "16.9.2014"),
"Vlasta Formánková", "Vlast[a-ž]*\\s*Formánkov[a-ž]*", 1953, "F", "CUNI", "judr", "judge", "5.8.2005", "5.8.2015",
"Vladimír Kůrka", "Vladimír[a-ž]*\\s*Kůrk[a-ž]*", 1948, "M", "CUNI", "judr", "judge", "15.12.2005", "15.12.2015",
"Jan Musil", "Jan[a-ž]*\\s*Musil[a-ž]*", 1941, "M", "CUNI", "prof", "scholar", c("27.11.2003", "20.1.2014"), c("27.11.2013", "31.1.2019"),
"Kateřina Šimáčková", "Kateřin[a-ž]*\\s*Šimáčkov[a-ž]*", 1966, "F", "MUNI", "phd", "judge", "7.8.2013", "10.12.2021",
"Pavel Šámal", "Pav[a-ž]*\\s*Šámal[a-ž]*", 1953, "M", "CUNI", "prof", "judge", "20.2.2020", NA,
"Josef Fiala", "Josef[a-ž]*\\s*Fial[a-ž]*", 1953, "M", "MUNI", "prof", "scholar", "17.12.2015", NA,
"Jaromír Jirsa", "Jaromír[a-ž]*\\s*Jirs[a-ž]*", 1966, "M", "CUNI", "judr", "judge", "7.10.2015", NA,
"David Uhlíř", "David[a-ž]*\\s*Uhlíř[a-ž]*", 1954, "M", "CUNI", "judr", "lawyer", "10.12.2014", NA,
"Tomáš Lichovník", "Tomáš[a-ž]*\\s*Lichovník[a-ž]*", 1964, "M", "MUNI", "judr", "judge", "19.6.2014", NA,
"Vojtěch Šimíček", "Vojtěch[a-ž]*\\s*Šimíč[a-ž]*", 1969, "M", "MUNI", "doc", "judge", "12.6.2014", NA,
"Jiří Zemánek", "Jiří[a-ž]*\\s*Zemán[a-ž]*", 1950, "M", "CUNI", "judr", "scholar", "20.1.2014", NA,
"Radovan Suchánek", "Radovan[a-ž]*\\s*Suchán[a-ž]*", 1972, "M", "CUNI", "phd", "scholar", "26.11.2013", "26.11.2023",
"Ludvík David", "Ludvík[a-ž]*\\s*David[a-ž]*", 1951, "M", "MUNI", "judr", "judge", "7.8.2013", "7.8.2023",
"Vladimír Sládeček", "Vladimír[a-ž]*\\s*Sládeč[a-ž]*", 1954, "M", "CUNI", "prof", "scholar", "4.6.2013", "4.6.2023",
"Jan Filip", "Jan[a-ž]*\\s* Filip[a-ž]*", 1950, "M", "MUNI", "prof", "scholar", "3.5.2013", "3.5.2023",
"Jaroslav Fenyk", "Jaroslav[a-ž]*\\s*Fenyk[a-ž]*", 1961, "M", "CUNI", "prof", "scholar", "3.5.2013", "3.5.2023",
"Milada Tomková", "Milad[a-ž]*\\s*Tomkov[a-ž]*", 1959, "F", "CUNI", "judr", "judge", "3.5.2013", "3.5.2023",
"Pavel Rychetský", "Pav[a-ž]*\\s*Rychetsk[a-ž]*", 1943, "M", "CUNI", "judr", "politician", c("6.8.2003", "7.8.2013"), c("6.8.2013", NA),
"Jan Svatoň", "Jan[a-ž]*\\s*Svato[a-ž]*", 1952, "M", "MUNI", "doc", "scholar", "15.2.2023", NA,
"Josef Baxa", "Josef[a-ž]*\\s*Bax[a-ž]*", 1959, "M", "CUNI", "judr", "judge", "5.6.2023", NA,
"Jan Wintr", "Jan[a-ž]*\\s*Wintr[a-ž]*", 1978, "M", "CUNI", "prof", "scholar", "5.6.2023", NA,
"Daniela Zemanová", "Daniel[a-ž]*\\s*Zeman[a-ž]*", 1971, "F", "CUNI", "mgr", "judge", "5.6.2023", NA,
"Kateřina Ronovská", "Kate[a-ž]*\\s*Ronovs[a-ž]*", 1974, "F", "MUNI", "prof", "scholar", "4.8.2023", NA,
"Veronika Křesťanová", "Veroni[a-ž]*\\s*Křesťan[a-ž]*", 1969, "F", "CUNI", "phd", "judge", "8.8.2023", NA
) %>%
unnest(c(start, end)) %>%
mutate(across(c(start,end), ~as_date(x = ., format = "%d.%m.%Y"))) %>%
nest(mandate = c(start,end)) %>%
rowwise() %>%
mutate(judge_id = paste0("J:",cur_group_id()),
gender = factor(gender),
uni = factor(uni),
education = factor(education,
ordered = TRUE,
levels = c("mgr", "judr", "phd", "doc", "prof"))) %>%
mutate(initials = paste0(substring(word(judge_name, 1), 1, 1), ".\\s*", substring(word(judge_name, 2), 1, 1), ".")) %>%
relocate(judge_id)
View(data_judges)
data_judges <- tribble(
~judge_name, ~judge_name_lemmatized, ~yob, ~gender, ~uni, ~education, ~profession, ~start, ~end,
"Iva Brožová", "Iv[a-ž]*\\s*Brožov[a-ž]*", 1951, "F", "MUNI", "judr", "judge", "15.7.1993", "8.12.1999",
"Vojtěch Cepl", "Vojtěch[a-ž]*\\s*Cepl[a-ž]*", 1938, "M", "CUNI", "prof", "scholar", "15.7.1993", "15.7.2003",
"Vladimír Čermák", "Vladimír[a-ž]*\\s*Čermák[a-ž]*", 1929, "M", "CUNI", "prof", "scholar", "15.7.1993", "15.7.2003",
"Miloš Holeček", "Miloš[a-ž]*\\s*Holeč[a-ž]*", 1950, "M", "CUNI", "judr", "judge", "15.7.1993", "15.7.2003",
"Vladimír Jurka", "Vladimír[a-ž]*\\s*Jur[a-ž]*", 1948, "M", "KOM", "judr", "judge", "15.7.1993", "15.7.2003",
"Zdeněk Kessler", "Zde[a-ž]*\\s*Kessler[a-ž]*", 1929, "M", "MUNI", "judr", "politician", "15.7.1993", "12.2.2003",
"Vladimír Klokočka", "Vladimír[a-ž]*\\s*Klokočk[a-ž]*", 1929, "M", "CUNI", "prof", "scholar", "15.7.1993", "15.7.2003",
"Vladimír Paul", "Vladimír[a-ž]*\\s*Paul[a-ž]*", 1924, "M", "CUNI", "judr", "lawyer", "15.7.1993", "3.4.2002",
"Antonín Procházka", "Antonín[a-ž]*\\s*Procházk[a-ž]*", 1927, "M", "MUNI", "judr", "lawyer", "15.7.1993", "15.7.2003",
"Vlastimil Ševčík", "Vlastimil[a-ž]*\\s*Ševčík[a-ž]*", 1927, "M", "MUNI", "judr", "judge", "15.7.1993", "15.12.2002",
"Eva Zarembová", "Ev[a-ž]*\\s*Zarembov[a-ž]*", 1946, "F", "CUNI", "judr", "judge", "9.11.1993", "9.11.2003",
"Pavel Varvařovský", "Pav[a-ž]*\\s*Varvařovsk[a-ž]*", 1945, "M", "CUNI", "judr", "judge", "29.3.1994", "29.3.2004",
"Jiří Malenovský", "Jiří[a-ž]*\\s*Malenovsk[a-ž]*", 1950, "M", "MUNI", "prof", "scholar", "4.4.2000", "8.5.2004",
"Eliška Wagnerová", "Elišk[a-ž]*\\s*W(a|á)gner[a-ž]*", 1948, "F", "CUNI", "phd", "scholar", "20.3.2002", "20.3.2012",
"František Duchoň", "Františ[a-ž]*\\s*Ducho[a-ž]*", 1946, "M", "CUNI", "judr", "judge", "6.6.2002", "6.6.2012",
"Dagmar Lastovecká", "Dagmar Lastoveck[a-ž]*", 1951, "F", "MUNI", "judr", "politician", "29.8.2003", "29.8.2013",
"Pavel Holländer", "Pav[a-ž]*\\s*Holländer[a-ž]*", 1953, "M", "KOM", "prof", "scholar", "15.7.1993", "6.8.2013",
"Vojen Güttler", "Vojen[a-ž]*\\s*G(ü|ű|u|ú)t(|t)ler[a-ž]*", 1934, "M", "CUNI", "judr", "politician", "15.7.1993", "6.8.2013",
"Miloslav Výborný", "Miloslav[a-ž]*\\s*Výborn[a-ž]*", 1952, "M", "CUNI", "judr", "politician", "3.6.2003", "3.6.2013",
"Jiří Mucha", "Jiří[a-ž]*\\s*Much[a-ž]*", 1946, "M", "CUNI", "judr", "lawyer", "28.1.2003", "28.1.2013",
"Jiří Nykodým", "Jiří[a-ž]*\\s*Nykodým[a-ž]*", 1945, "M", "CUNI", "judr", "lawyer", "17.12.2003", "17.12.2013",
"Stanislav Balík", "Stanislav[a-ž]*\\s*Balík[a-ž]*", 1956, "M", "CUNI", "phd", "lawyer", "26.5.2004", "26.5.2014",
"Michaela Židlická", "Michael[a-ž]*\\s*Židlick[a-ž]*", 1952, "F", "MUNI", "doc", "scholar", "16.6.2004", "16.6.2014",
"Ivana Janů", "Ivan[a-ž]*\\s*Janů", 1946, "F", "CUNI", "judr", "politician", c("9.11.1993", "16.9.2004"), c("9.11.2003", "16.9.2014"),
"Vlasta Formánková", "Vlast[a-ž]*\\s*Formánkov[a-ž]*", 1953, "F", "CUNI", "judr", "judge", "5.8.2005", "5.8.2015",
"Vladimír Kůrka", "Vladimír[a-ž]*\\s*Kůrk[a-ž]*", 1948, "M", "CUNI", "judr", "judge", "15.12.2005", "15.12.2015",
"Jan Musil", "Jan[a-ž]*\\s*Musil[a-ž]*", 1941, "M", "CUNI", "prof", "scholar", c("27.11.2003", "20.1.2014"), c("27.11.2013", "31.1.2019"),
"Kateřina Šimáčková", "Kateřin[a-ž]*\\s*Šimáčkov[a-ž]*", 1966, "F", "MUNI", "phd", "judge", "7.8.2013", "10.12.2021",
"Pavel Šámal", "Pav[a-ž]*\\s*Šámal[a-ž]*", 1953, "M", "CUNI", "prof", "judge", "20.2.2020", NA,
"Josef Fiala", "Josef[a-ž]*\\s*Fial[a-ž]*", 1953, "M", "MUNI", "prof", "scholar", "17.12.2015", NA,
"Jaromír Jirsa", "Jaromír[a-ž]*\\s*Jirs[a-ž]*", 1966, "M", "CUNI", "judr", "judge", "7.10.2015", NA,
"David Uhlíř", "David[a-ž]*\\s*Uhlíř[a-ž]*", 1954, "M", "CUNI", "judr", "lawyer", "10.12.2014", NA,
"Tomáš Lichovník", "Tomáš[a-ž]*\\s*Lichovník[a-ž]*", 1964, "M", "MUNI", "judr", "judge", "19.6.2014", NA,
"Vojtěch Šimíček", "Vojtěch[a-ž]*\\s*Šimíč[a-ž]*", 1969, "M", "MUNI", "doc", "judge", "12.6.2014", NA,
"Jiří Zemánek", "Jiří[a-ž]*\\s*Zemán[a-ž]*", 1950, "M", "CUNI", "judr", "scholar", "20.1.2014", NA,
"Radovan Suchánek", "Radovan[a-ž]*\\s*Suchán[a-ž]*", 1972, "M", "CUNI", "phd", "scholar", "26.11.2013", "26.11.2023",
"Ludvík David", "Ludvík[a-ž]*\\s*David[a-ž]*", 1951, "M", "MUNI", "judr", "judge", "7.8.2013", "7.8.2023",
"Vladimír Sládeček", "Vladimír[a-ž]*\\s*Sládeč[a-ž]*", 1954, "M", "CUNI", "prof", "scholar", "4.6.2013", "4.6.2023",
"Jan Filip", "Jan[a-ž]*\\s* Filip[a-ž]*", 1950, "M", "MUNI", "prof", "scholar", "3.5.2013", "3.5.2023",
"Jaroslav Fenyk", "Jaroslav[a-ž]*\\s*Fenyk[a-ž]*", 1961, "M", "CUNI", "prof", "scholar", "3.5.2013", "3.5.2023",
"Milada Tomková", "Milad[a-ž]*\\s*Tomkov[a-ž]*", 1959, "F", "CUNI", "judr", "judge", "3.5.2013", "3.5.2023",
"Pavel Rychetský", "Pav[a-ž]*\\s*Rychetsk[a-ž]*", 1943, "M", "CUNI", "judr", "politician", c("6.8.2003", "7.8.2013"), c("6.8.2013", NA),
"Jan Svatoň", "Jan[a-ž]*\\s*Svato[a-ž]*", 1952, "M", "MUNI", "doc", "scholar", "15.2.2023", NA,
"Josef Baxa", "Josef[a-ž]*\\s*Bax[a-ž]*", 1959, "M", "CUNI", "judr", "judge", "5.6.2023", NA,
"Jan Wintr", "Jan[a-ž]*\\s*Wintr[a-ž]*", 1978, "M", "CUNI", "prof", "scholar", "5.6.2023", NA,
"Daniela Zemanová", "Daniel[a-ž]*\\s*Zeman[a-ž]*", 1971, "F", "CUNI", "mgr", "judge", "5.6.2023", NA,
"Kateřina Ronovská", "Kate[a-ž]*\\s*Ronovs[a-ž]*", 1974, "F", "MUNI", "prof", "scholar", "4.8.2023", NA,
"Veronika Křesťanová", "Veroni[a-ž]*\\s*Křesťan[a-ž]*", 1969, "F", "CUNI", "phd", "judge", "8.8.2023", NA
) %>%
unnest(c(start, end)) %>%
mutate(across(c(start,end), ~as_date(x = ., format = "%d.%m.%Y"))) %>%
nest(mandate = c(start,end)) %>%
rowwise() %>%
mutate(judge_id = paste0("J:",cur_group_id()),
gender = factor(gender),
uni = factor(uni),
education = factor(education,
ordered = TRUE,
levels = c("mgr", "judr", "phd", "doc", "prof"))) %>%
mutate(judge_initials = paste0(substring(word(judge_name, 1), 1, 1), ".\\s*", substring(word(judge_name, 2), 1, 1), ".")) %>%
relocate(judge_id)
View(data_judges)
write_rds(data_judges, file = "../data/US_judges.rds")
get_compositions = function(metadata, texts, judges){
# Paralelise
plan(multisession, workers = parallel::detectCores() - 2)
tictoc::tic()
metadata = left_join(metadata, texts) %>%
mutate(composition = future_pmap(., function(doc_id, text, ...) judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
select(-text)
tictoc::toc()
return(metadata)
}
US_texts = readr::read_rds("../data/US_texts.rds")
US_judges = readr::read_rds("../data/US_judges.rds")
US_metadata = readr::read_rds("../data/US_metadata.rds")
US_metadata = get_compositions(US_metadata, US_texts, US_judges)
View(US_metadata)
library(tidyverse)
library(furrr)
# Load data
US_texts = readr::read_rds("../data/US_texts.rds")
US_judges = readr::read_rds("../data/US_judges.rds")
US_metadata = readr::read_rds("../data/US_metadata.rds")
get_compositions = function(metadata, texts, judges){
# Paralelise
plan(multisession, workers = parallel::detectCores() - 2)
tictoc::tic()
metadata = left_join(metadata, texts, by = join_by(doc_id)) %>%
mutate(composition = future_pmap(., function(doc_id, text, ...) judges %>%
filter(str_detect(string = text, pattern = judge_name_lemmatized)) %>%
select(judge_name, judge_id))) %>%
select(-text)
tictoc::toc()
return(metadata)
}
US_metadata = get_compositions(US_metadata, US_texts, US_judges)
